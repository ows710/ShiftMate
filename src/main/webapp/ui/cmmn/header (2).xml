<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_screenName="헤더 페이지">
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map" />
			<w2:workflowCollection />
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />
		<style type="text/css">
			.header-container {
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 0 20px;
				background: white;
				color: #333;
				position: fixed;
				top: 0;
				left: 0;
				right: 0;
				z-index: 1001;
				height: 90px;
				box-shadow: 0 2px 4px rgba(0,0,0,0.1);
				border-bottom: 1px solid #e0e0e0;
			}
			
			.left-section {
				display: flex;
				align-items: center;
				width: 60px;
			}
			
			.hamburger-menu {
				width: 24px;
				height: 24px;
				cursor: pointer;
				display: flex;
				flex-direction: column;
				justify-content: space-between;
				padding: 4px 0;
				position: relative;
			}
			
			.hamburger-line {
				width: 24px;
				height: 2px;
				background: #333;
				border-radius: 1px;
				transition: all 0.3s ease;
				transform-origin: center;
			}
			
			/* 초기 상태: 사이드바가 열려있으므로 X 모양으로 시작 */
			.hamburger-menu {
				/* 초기 collapsed 상태 적용 */
			}
			
			.hamburger-menu .hamburger-line:nth-child(1) {
				transform: rotate(45deg) translate(5px, 5px);
			}
			
			.hamburger-menu .hamburger-line:nth-child(2) {
				opacity: 0;
			}
			
			.hamburger-menu .hamburger-line:nth-child(3) {
				transform: rotate(-45deg) translate(7px, -6px);
			}
			
			/* 햄버거 아이콘 토글 상태 (사이드바가 닫혔을 때 일반 햄버거로 복원) */
			.hamburger-menu.collapsed .hamburger-line:nth-child(1) {
				transform: none;
			}
			
			.hamburger-menu.collapsed .hamburger-line:nth-child(2) {
				opacity: 1;
			}
			
			.hamburger-menu.collapsed .hamburger-line:nth-child(3) {
				transform: none;
			}
			
			.center-section {
				flex: 1;
				display: flex;
				justify-content: center;
				align-items: center;
			}
			
			.logo-container {
				display: flex;
				align-items: center;
				gap: 10px;
			}
			
			.logo-image {
				width: 40px;
				height: 40px;
			}
			
			#logoImage {
				cursor: pointer;
				transition: opacity 0.2s ease;
			}
			
			#logoImage:hover {
				opacity: 0.8;
			}
			
			.logo-text {
				font-size: 24px;
				font-weight: 600;
				color: #4A90E2;
				letter-spacing: -0.5px;
			}
			
			.right-section {
				display: flex;
				align-items: center;
				gap: 15px;
				min-width: 180px;
				justify-content: flex-end;
			}
			
			.notification-container {
				position: relative;
			}
			
			.notification-icon {
				width: 32px;
				height: 32px;
				cursor: pointer;
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 20px;
				color: #666;
				position: relative;
			}
			
			.notification-badge {
				position: absolute;
				top: -5px;
				right: -5px;
				background: #ff4444;
				color: white;
				border-radius: 50%;
				width: 18px;
				height: 18px;
				font-size: 11px;
				display: flex;
				align-items: center;
				justify-content: center;
				font-weight: bold;
			}
			
			/* 기존 알림 드롭다운 스타일은 새로운 모달로 대체됨 */
			
			.user-container {
				position: relative;
			}
			
			.user-info {
				display: flex;
				align-items: center;
				gap: 8px;
				cursor: pointer;
				padding: 6px 12px;
				border-radius: 20px;
				transition: background-color 0.2s;
			}
			
			.user-info:hover {
				background: rgba(0,0,0,0.05);
			}
			
			.user-details {
				text-align: right;
			}
			
			.user-name {
				font-size: 14px;
				font-weight: 600;
				color: #333;
				line-height: 1.2;
			}
			
			.user-role {
				font-size: 12px;
				color: #666;
				line-height: 1.2;
			}
			
			.dropdown-arrow {
				font-size: 12px;
				color: #666;
				margin-left: 4px;
			}
			
			.user-dropdown {
				position: absolute;
				top: 45px;
				right: 0;
				width: 150px;
				background: white;
				border-radius: 8px;
				box-shadow: 0 4px 20px rgba(0,0,0,0.15);
				border: 1px solid #e0e0e0;
				z-index: 1002;
				display: none;
				overflow: hidden;
			}
			
			.user-dropdown.show {
				display: block !important;
			}
			
			.user-menu-item {
				padding: 12px 20px;
				color: #333;
				font-size: 14px;
				cursor: pointer;
				transition: background-color 0.2s;
				display: flex;
				align-items: center;
				gap: 8px;
			}
			
			.user-menu-item:hover {
				background: #f8f9fa;
			}
			
			.user-menu-item.logout {
				color: #dc3545;
			}
			
			.user-menu-item.logout:hover {
				background: #fff5f5;
			}
		</style>
		<script lazy="false" type="text/javascript"><![CDATA[
scwin.sidebarVisible = false;
scwin.notificationVisible = false;
scwin.userMenuVisible = false;

// ========== 알림 시스템 설정 상수 ==========
scwin.CONFIG = {
    MODAL: {
        ID: "header_notification_modal",
        MAX_WIDTH: "700px",
        MAX_HEIGHT: "80%",
        Z_INDEX: 10000
    },
    STYLES: {
        COLORS: {
            INFO: "#E3F2FD",
            WORK: "#E8F5E8", 
            WARNING: "#FFF3E0",
            DEFAULT: "#F5F5F5",
            BORDER: "#2196F3",
            READ_BG: "#FFFFFF",
            UNREAD_BG: "#F0F8FF",
            READ_TEXT: "#666666",
            UNREAD_TEXT: "#333333",
            READ_BORDER: "#E0E0E0",
            UNREAD_BORDER: "#2196F3"
        },
        GRADIENT: "linear-gradient(135deg, #2196F3, #1976D2)"
    },
    ICONS: {
        INFO: "",
        WORK: "",
        WARNING: "",
        DEFAULT: "",
        UNREAD: "",
        BELL: "",
        CALENDAR: "",
        EMPTY: "",
        SUMMARY: "",
        TIP: ""
    },
    TIMINGS: {
        MARK_READ_DELAY: 3000,
        REFRESH_DELAY: 100,
        BADGE_UPDATE_DELAY: 500
    }
};

// ========== 알림 데이터 (헤더 관련) ==========
scwin.notifications = [
    {
        id: "header_noti_1",
        title: "시스템 알림", 
        message: "새로운 업데이트가 적용되었습니다.",
        type: "info",
        createDate: "2025-01-15 09:00:00",
        isRead: false
    },
    {
        id: "header_noti_2",
        title: "근무표 확정",
        message: "7월 근무표가 확정되었습니다. 확인해 주세요.", 
        type: "work",
        createDate: "2025-01-15 10:30:00",
        isRead: false
    },
    {
        id: "header_noti_3", 
        title: "시스템 점검",
        message: "오늘 밤 12시부터 2시까지 시스템 점검이 예정되어 있습니다.",
        type: "warning",
        createDate: "2025-01-15 11:45:00", 
        isRead: true
    },
    {
        id: "header_noti_4",
        title: "새로운 기능",
        message: "알림 센터 기능이 추가되었습니다. 헤더의 알림 아이콘을 클릭해보세요.",
        type: "info", 
        createDate: "2025-01-15 14:20:00",
        isRead: true
    }
];

// ========== 알림 유틸리티 함수 ==========
// 알림 타입에 따른 아이콘과 색상 가져오기
scwin.getNotificationStyle = function(type) {
    switch(type) {
        case "info":
            return {
                icon: scwin.CONFIG.ICONS.INFO,
                bgColor: scwin.CONFIG.STYLES.COLORS.INFO
            };
        case "work":
            return {
                icon: scwin.CONFIG.ICONS.WORK,
                bgColor: scwin.CONFIG.STYLES.COLORS.WORK
            };
        case "warning":
            return {
                icon: scwin.CONFIG.ICONS.WARNING,
                bgColor: scwin.CONFIG.STYLES.COLORS.WARNING
            };
        default:
            return {
                icon: scwin.CONFIG.ICONS.DEFAULT,
                bgColor: scwin.CONFIG.STYLES.COLORS.DEFAULT
            };
    }
};

// 미읽은 알림 개수 계산
scwin.getUnreadCount = function() {
    var count = 0;
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (!scwin.notifications[i].isRead) {
            count++;
        }
    }
    return count;
};

// 알림 HTML 생성 (모달용)
scwin.generateNotificationHTML = function() {
    var notificationHtml = "";
    
    if (scwin.notifications.length === 0) {
        return "<div style='text-align: center; color: #999; font-size: 16px; padding: 40px;'>" + 
               scwin.CONFIG.ICONS.EMPTY + " 알림이 없습니다.</div>";
    }
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        var notification = scwin.notifications[i];
        var style = scwin.getNotificationStyle(notification.type);
        var readStatus = notification.isRead ? "" : " " + scwin.CONFIG.ICONS.UNREAD + " (미읽음)";
        
        // 읽음/미읽음에 따른 스타일 설정
        var bgColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_BG : scwin.CONFIG.STYLES.COLORS.UNREAD_BG;
        var textColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_TEXT : scwin.CONFIG.STYLES.COLORS.UNREAD_TEXT;
        var borderColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_BORDER : scwin.CONFIG.STYLES.COLORS.UNREAD_BORDER;
        var fontWeight = notification.isRead ? "normal" : "bold";
        var boxShadow = notification.isRead ? "0 1px 3px rgba(0,0,0,0.1)" : "0 2px 8px rgba(33,150,243,0.2)";
        
        notificationHtml += 
            "<div onclick='scwin.markNotificationAsRead(\"" + notification.id + "\")' style='margin-bottom: 15px; padding: 15px; background-color: " + bgColor + "; border-radius: 8px; border-left: 5px solid " + borderColor + "; box-shadow: " + boxShadow + "; transition: all 0.3s ease; cursor: " + (notification.isRead ? "default" : "pointer") + ";'>" +
            "<div style='font-size: 16px; font-weight: " + fontWeight + "; color: " + textColor + "; margin-bottom: 8px;'>" +
            style.icon + " " + notification.title + readStatus + "</div>" +
            "<div style='font-size: 14px; color: " + (notification.isRead ? "#777" : "#555") + "; margin-bottom: 8px; line-height: 1.4;'>" + notification.message + "</div>" +
            "<div style='font-size: 12px; color: " + (notification.isRead ? "#999" : "#888") + "; text-align: right;'>" + scwin.CONFIG.ICONS.CALENDAR + " " + notification.createDate + "</div>" +
            "</div>";
    }
    
    return notificationHtml;
};

// 알림 메시지 생성 (Alert용)
scwin.generateAlertMessage = function() {
    var unreadCount = scwin.getUnreadCount();
    var message = scwin.CONFIG.ICONS.BELL + " [헤더 알림 센터] " + scwin.CONFIG.ICONS.BELL + "\n\n";
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        var notification = scwin.notifications[i];
        var style = scwin.getNotificationStyle(notification.type);
        var statusText = notification.isRead ? "[읽음]" : "[미읽음]";
        
        message += "━━━━━━━━━━━━━━━━━━━━━━━\n";
        message += (i + 1) + ". " + style.icon + " " + notification.title + " " + statusText + "\n";
        message += "내용: " + notification.message + "\n";
        message += "시간: " + notification.createDate + "\n\n";
    }
    
    message += "━━━━━━━━━━━━━━━━━━━━━━━\n";
    message += scwin.CONFIG.ICONS.SUMMARY + " 요약: 총 " + scwin.notifications.length + "개 알림 (미읽음 " + unreadCount + "개)\n\n";
    message += scwin.CONFIG.ICONS.TIP + " 이 창을 닫으면 모든 알림이 읽음 처리됩니다.";
    
    return message;
};

// ========== 알림 모달 관리 함수 ==========
// 알림 모달 표시
scwin.showNotificationModal = function() {
    console.log("=== 헤더 알림 모달 표시 시도 ===");
    
    try {
        // 먼저 알림 데이터 확인
        console.log("현재 알림 개수:", scwin.notifications.length);
        
        // DOM 기반 커스텀 모달로 직접 표시
        scwin.showCustomModal();
        
    } catch (e) {
        console.log("모달 표시 중 오류 발생:", e.message);
        console.log("alert로 대체 표시");
        scwin.showAlertNotification();
    }
};

// 커스텀 DOM 모달로 표시
scwin.showCustomModal = function() {
    console.log("=== 헤더 커스텀 모달 생성 시작 ===");
    
    try {
        // 기존 모달이 있으면 제거
        var existingModal = document.getElementById(scwin.CONFIG.MODAL.ID);
        if (existingModal) {
            existingModal.remove();
        }
        
        var unreadCount = scwin.getUnreadCount();
        var notificationHtml = scwin.generateNotificationHTML();
        
        console.log("알림 HTML 생성 완료, 총 " + scwin.notifications.length + "개");
        
        // 모달 HTML 생성
        var modalHtml = 
            "<div id='" + scwin.CONFIG.MODAL.ID + "' style='position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: " + scwin.CONFIG.MODAL.Z_INDEX + "; display: flex; justify-content: center; align-items: center;'>" +
            "<div style='background: white; border-radius: 12px; width: 90%; max-width: " + scwin.CONFIG.MODAL.MAX_WIDTH + "; max-height: " + scwin.CONFIG.MODAL.MAX_HEIGHT + "; box-shadow: 0 10px 30px rgba(0,0,0,0.3); overflow: hidden;'>" +
            
            // 헤더
            "<div style='background: #1C3D6B; color: white; padding: 20px; text-align: center;'>" +
            "<h2 style='margin: 0; font-size: 20px; font-weight: bold;'>" + scwin.CONFIG.ICONS.BELL + " 헤더 알림 센터</h2>" +
            "<p style='margin: 5px 0 0 0; font-size: 14px; opacity: 0.9;'>총 " + scwin.notifications.length + "개 알림" + (unreadCount > 0 ? " (" + scwin.CONFIG.ICONS.UNREAD + "미읽음 " + unreadCount + "개)" : "") + "</p>" +
            "</div>" +
            
            // 내용
            "<div style='padding: 20px; max-height: 400px; overflow-y: auto;'>" +
            notificationHtml +
            "</div>" +
            
            // 버튼 영역
            "<div style='border-top: 1px solid #eee; padding: 15px 20px; text-align: right; background-color: #f9f9f9;'>" +
            "<button onclick='scwin.addTestNotification()' style='background: #4CAF50; color: white; border: none; padding: 10px 20px; border-radius: 6px; margin-right: 10px; cursor: pointer; font-size: 14px;'>✨ 테스트 알림 추가</button>" +
            "<button onclick='scwin.closeCustomModal()' style='background: #f44336; color: white; border: none; padding: 10px 20px; border-radius: 6px; cursor: pointer; font-size: 14px;'>❌ 닫기</button>" +
            "</div>" +
            
            "</div>" +
            "</div>";
        
        // DOM에 추가
        document.body.insertAdjacentHTML('beforeend', modalHtml);
        
        console.log("헤더 커스텀 모달 생성 완료");
        
        // 이벤트 리스너 등록
        scwin.attachModalEventListeners();
        
        // 자동 읽음 처리 (시간을 늘려서 사용자가 개별 클릭할 시간 확보)
        setTimeout(function() {
            scwin.markAllAsRead();
        }, 10000); // 10초로 변경
        
        console.log("=== 헤더 커스텀 모달 표시 완료 ===");
        
    } catch (e) {
        console.log("커스텀 모달 생성 중 오류:", e.message);
        scwin.showAlertNotification();
    }
};

// Alert로 알림 표시 (대체 방법)
scwin.showAlertNotification = function() {
    console.log("=== Alert로 헤더 알림 표시 시작 ===");
    
    try {
        var message = scwin.generateAlertMessage();
        var unreadCount = scwin.getUnreadCount();
        
        console.log("Alert 창 표시, 미읽음 " + unreadCount + "개");
        alert(message);
        
        // 1초 후 모든 알림을 읽음 처리
        setTimeout(function() {
            scwin.markAllAsRead();
        }, 1000);
        
        console.log("=== Alert 헤더 알림 표시 완료 ===");
        
    } catch (e) {
        console.log("Alert 표시 중 오류:", e.message);
        // 최후의 수단
        alert("알림 표시 중 오류가 발생했습니다.\n현재 " + scwin.notifications.length + "개의 알림이 있습니다.\n개발자 도구 콘솔을 확인해주세요.");
    }
};

// ========== 알림 관리 함수 ==========
// 모든 알림을 읽음 처리
scwin.markAllAsRead = function() {
    var hasChanges = false;
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (!scwin.notifications[i].isRead) {
            scwin.notifications[i].isRead = true;
            hasChanges = true;
        }
    }
    
    if (hasChanges) {
        scwin.updateNotificationBadge();
        console.log("모든 헤더 알림을 읽음 처리 완료");
    }
};

// 개별 알림 읽음 처리
scwin.markNotificationAsRead = function(notificationId) {
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (scwin.notifications[i].id === notificationId && !scwin.notifications[i].isRead) {
            scwin.notifications[i].isRead = true;
            scwin.updateNotificationBadge();
            console.log("알림 읽음 처리:", notificationId);
            
            // 모달 새로고침하여 색상 변경
            scwin.refreshModal();
            return true;
        }
    }
    return false;
};

// 알림 배지 업데이트 (헤더용)
scwin.updateNotificationBadge = function() {
    try {
        var unreadCount = scwin.getUnreadCount();
        
        // 버튼 찾기 (캐싱)
        if (!scwin._btnAlarmCache) {
            scwin._btnAlarmCache = $w.getComponentById("alarm") || document.getElementById("alarm");
        }
        
        var btnAlarm = scwin._btnAlarmCache;
        if (!btnAlarm) {
            console.log("헤더 알림 버튼을 찾을 수 없습니다");
            return;
        }
        
        // 배지 요소 찾기
        var badgeElement = document.getElementById("notificationBadge");
        var countElement = document.getElementById("notificationCount");
        
        // 현재 상태와 비교하여 필요한 경우만 업데이트
        var shouldShowBadge = unreadCount > 0;
        var currentlyShowingBadge = btnAlarm._badgeActive || false;
        
        if (shouldShowBadge !== currentlyShowingBadge) {
            if (shouldShowBadge) {
                // 미읽은 알림이 있으면 빨간 테두리
                var badgeStyle = "border: 3px solid #FF0000; border-radius: 50%; box-shadow: 0 0 10px #FF0000;";
                if (btnAlarm.setStyle) {
                    btnAlarm.setStyle(badgeStyle);
                } else {
                    btnAlarm.style.border = "3px solid #FF0000";
                    btnAlarm.style.borderRadius = "50%";
                    btnAlarm.style.boxShadow = "0 0 10px #FF0000";
                }
                btnAlarm._badgeActive = true;
                
                // 배지 표시 및 숫자 업데이트
                if (badgeElement) {
                    badgeElement.style.display = "block";
                }
                if (countElement) {
                    countElement.setValue(unreadCount.toString());
                }
                
                console.log("헤더 알림 배지 활성화 (" + unreadCount + "개 미읽음)");
            } else {
                // 미읽은 알림이 없으면 원래 상태
                if (btnAlarm.setStyle) {
                    btnAlarm.setStyle("border: none; box-shadow: none;");
                } else {
                    btnAlarm.style.border = "none";
                    btnAlarm.style.boxShadow = "none";
                }
                btnAlarm._badgeActive = false;
                
                // 배지 숨기기
                if (badgeElement) {
                    badgeElement.style.display = "none";
                }
                
                console.log("헤더 알림 배지 비활성화");
            }
        } else if (shouldShowBadge && countElement) {
            // 배지가 이미 표시되어 있지만 숫자가 다른 경우 업데이트
            countElement.setValue(unreadCount.toString());
        }
        
    } catch (e) {
        console.log("배지 업데이트 중 오류:", e.message);
    }
};

// 테스트 알림 추가 (헤더 관련)
scwin.addTestNotification = function() {
    var testMessages = [
        {
            title: "시스템 업데이트",
            message: "새로운 기능이 추가되었습니다. 확인해 주세요.",
            type: "info"
        },
        {
            title: "근무표 변경",
            message: "다음 주 근무표가 변경되었습니다.",
            type: "work"
        },
        {
            title: "시스템 점검",
            message: "오늘 밤 시스템 점검이 예정되어 있습니다.",
            type: "warning"
        },
        {
            title: "새로운 알림",
            message: "알림 센터 기능이 정상적으로 작동합니다.",
            type: "info"
        }
    ];
    
    var randomIndex = Math.floor(Math.random() * testMessages.length);
    var testMessage = testMessages[randomIndex];
    
    // 새 알림 추가
    var newNotification = {
        id: "test_" + new Date().getTime(),
        title: testMessage.title,
        message: testMessage.message,
        type: testMessage.type,
        createDate: new Date().toLocaleString(),
        isRead: false
    };
    
    scwin.notifications.unshift(newNotification); // 맨 앞에 추가
    
    console.log("헤더 테스트 알림 추가:", testMessage.title);
    
    // 배지 업데이트
    scwin.updateNotificationBadge();
    
    // 모달 새로고침 (성능 최적화)
    scwin.refreshModal();
};

// 모달 새로고침 (성능 최적화)
scwin.refreshModal = function() {
    var existingModal = document.getElementById(scwin.CONFIG.MODAL.ID);
    if (existingModal) {
        scwin.closeCustomModal();
        setTimeout(function() {
            scwin.showNotificationModal();
        }, scwin.CONFIG.TIMINGS.REFRESH_DELAY);
    }
};

// 커스텀 모달 닫기 (개선된 버전)
scwin.closeCustomModal = function() {
    console.log("헤더 커스텀 모달 닫기");
    try {
        var modal = document.getElementById(scwin.CONFIG.MODAL.ID);
        if (modal) {
            modal.remove();
            console.log("헤더 커스텀 모달 제거 완료");
        }
    } catch (e) {
        console.log("모달 닫기 중 오류:", e.message);
    }
};

// 모달 이벤트 리스너 등록
scwin.attachModalEventListeners = function() {
    var modal = document.getElementById(scwin.CONFIG.MODAL.ID);
    if (!modal) return;
    
    // 모달 외부 클릭 시 닫기
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            scwin.closeCustomModal();
        }
    });
    
    // ESC 키로 닫기 (한 번만 등록)
    if (!scwin._escListenerAttached) {
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && document.getElementById(scwin.CONFIG.MODAL.ID)) {
                scwin.closeCustomModal();
            }
        });
        scwin._escListenerAttached = true;
    }
};

scwin.onpageload = function() {
	console.log("헤더 초기화 완료");
	// 초기 상태 설정
	scwin.hideUserMenu();
	
	// 알림 시스템 초기화
	setTimeout(function() {
		try {
			console.log("헤더 알림 시스템 초기화 중...");
			if (scwin.updateNotificationBadge) {
				scwin.updateNotificationBadge();
				console.log("헤더 알림 배지 초기화 완료");
			}
		} catch (e) {
			console.log("알림 시스템 초기화 중 오류:", e.message);
		}
	}, 1000);
};

scwin.toggleSidebar = function() {
	console.log("햄버거 아이콘 클릭됨 - 사이드바 토글 시도");
	
	var success = false;
	
	// 방법 1: 부모 프레임에서 직접 함수 호출
	try {
		if (window.parent && window.parent.scwin && window.parent.scwin.toggleSidebar) {
			window.parent.scwin.toggleSidebar();
			console.log("✅ 방법 1 성공: parent.scwin.toggleSidebar");
			success = true;
		}
	} catch (e) {
		console.log("방법 1 실패:", e);
	}
	
	// 방법 2: 전역 함수로 등록된 함수 호출
	if (!success) {
		try {
			if (window.parent && window.parent.toggleSidebarFromHeader) {
				window.parent.toggleSidebarFromHeader();
				console.log("✅ 방법 2 성공: parent.toggleSidebarFromHeader");
				success = true;
			}
		} catch (e) {
			console.log("방법 2 실패:", e);
		}
	}
	
	// 방법 3: 최상위 프레임에서 함수 찾기
	if (!success) {
		try {
			if (window.top && window.top.scwin && window.top.scwin.toggleSidebar) {
				window.top.scwin.toggleSidebar();
				console.log("✅ 방법 3 성공: top.scwin.toggleSidebar");
				success = true;
			}
		} catch (e) {
			console.log("방법 3 실패:", e);
		}
	}
	
	// 방법 4: postMessage 사용
	if (!success) {
		try {
			window.parent.postMessage({
				action: 'toggleSidebar',
				source: 'header'
			}, '*');
			console.log("✅ 방법 4 성공: postMessage 전송");
			success = true;
		} catch (e) {
			console.log("방법 4 실패:", e);
		}
	}
	
	if (!success) {
		console.error("❌ 모든 통신 방법 실패");
		alert("사이드바 토글 기능에 문제가 있습니다. 페이지를 새로고침해주세요.");
	}
};

// 햄버거 아이콘 업데이트 함수
scwin.updateHamburgerIcon = function(isVisible) {
	try {
		var hamburgerMenu = document.querySelector('.hamburger-menu');
		if (hamburgerMenu) {
			if (isVisible) {
				// 사이드바가 열려있을 때 → X 모양 유지 (collapsed 클래스 제거)
				hamburgerMenu.classList.remove('collapsed');
				console.log("✅ 햄버거 아이콘: X 모양 (사이드바 열림)");
			} else {
				// 사이드바가 닫혀있을 때 → 일반 햄버거 아이콘 (collapsed 클래스 추가)
				hamburgerMenu.classList.add('collapsed');
				console.log("✅ 햄버거 아이콘: 일반 모양 (사이드바 닫힘)");
			}
		}
	} catch (e) {
		console.error("햄버거 아이콘 업데이트 오류:", e);
	}
};

// 알림 토글 함수는 alarm_onclick으로 대체됨

scwin.toggleUserMenu = function() {
	console.log("사용자 메뉴 토글 함수 호출");
	
	if (scwin.userMenuVisible) {
		scwin.hideUserMenu();
	} else {
		scwin.showUserMenu();
	}
};

scwin.showUserMenu = function() {
	console.log("사용자 메뉴 표시 시도");
	
	try {
		// 전역 jQuery 사용 시도
		if (typeof $ !== 'undefined') {
			$('.user-dropdown').addClass('show');
			console.log("jQuery로 사용자 메뉴 표시됨");
		} else if (typeof window.$ !== 'undefined') {
			window.$('.user-dropdown').addClass('show');
			console.log("window.jQuery로 사용자 메뉴 표시됨");
		} else {
			// 순수 JavaScript 사용
			var elements = document.querySelectorAll('.user-dropdown');
			for (var i = 0; i < elements.length; i++) {
				elements[i].classList.add('show');
			}
			console.log("순수 JavaScript로 사용자 메뉴 표시됨");
		}
		scwin.userMenuVisible = true;
	} catch (e) {
		console.log("사용자 메뉴 표시 오류:", e);
	}
};

scwin.hideUserMenu = function() {
	console.log("사용자 메뉴 숨김 시도");
	
	try {
		// 전역 jQuery 사용 시도
		if (typeof $ !== 'undefined') {
			$('.user-dropdown').removeClass('show');
			console.log("jQuery로 사용자 메뉴 숨김");
		} else if (typeof window.$ !== 'undefined') {
			window.$('.user-dropdown').removeClass('show');
			console.log("window.jQuery로 사용자 메뉴 숨김");
		} else {
			// 순수 JavaScript 사용
			var elements = document.querySelectorAll('.user-dropdown');
			for (var i = 0; i < elements.length; i++) {
				elements[i].classList.remove('show');
			}
			console.log("순수 JavaScript로 사용자 메뉴 숨김");
		}
		scwin.userMenuVisible = false;
	} catch (e) {
		console.log("사용자 메뉴 숨김 오류:", e);
	}
};

scwin.logout = function() {
	if (confirm("로그아웃 하시겠습니까?")) {
		alert("로그아웃 됩니다.");
		scwin.hideUserMenu();
		// 여기에 실제 로그아웃 로직 추가
	}
};

// 외부 클릭 시 메뉴 닫기
scwin.closeMenus = function() {
	scwin.hideUserMenu();
};

// 로고 클릭 시 홈으로 이동
scwin.goToHome = function() {
	try {
		console.log("로고 클릭 - 홈으로 이동");
		window.location.href = "http://localhost:9093/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/layout/mkduty.xml";
	} catch (e) {
		console.error("홈 이동 오류:", e);
		alert("페이지 이동 중 오류가 발생했습니다.");
	}
};

scwin.alarm_onclick = function(e) {
    console.log("=== 헤더 알림 버튼 클릭됨 ===");
    
    try {
        console.log("현재 헤더 알림 개수:", scwin.notifications.length);
        scwin.showNotificationModal();
    } catch (error) {
        console.log("버튼 클릭 처리 중 오류:", error.message);
        scwin.showAlertNotification();
    }
};
]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload" ev:onclick="scwin.closeMenus">
		<xf:group class="header-container">
			<xf:group class="left-section">
				<xf:group class="hamburger-menu" ev:onclick="scwin.toggleSidebar">
					<xf:group class="hamburger-line"></xf:group>
					<xf:group class="hamburger-line"></xf:group>
					<xf:group class="hamburger-line"></xf:group>
				</xf:group>
			</xf:group>
			
			<xf:group class="center-section">
				<xf:group class="logo-container">
                    <xf:image src="/InsWebApp/images/logo.png" style="width: 200px;height: 60px;cursor:pointer;" id="logoImage" ev:onclick="scwin.goToHome"></xf:image>
				</xf:group>
			</xf:group>
			
			<xf:group class="right-section">
				<xf:group class="notification-container">
					<xf:image src="/InsWebApp/images/jong.png" style="width: 20px;height: 20px;" id="alarm" ev:onclick="scwin.alarm_onclick"></xf:image>
				</xf:group>
				
				<xf:group class="user-container">
					<xf:group class="user-info" ev:onclick="scwin.toggleUserMenu">
						<xf:group class="user-details">
							<w2:textbox id="" class="user-name" label="김간호" style="display:block;"></w2:textbox>
							<w2:textbox id="" class="user-role" label="수간호사" style="display:block;"></w2:textbox>
						</xf:group>
						<w2:textbox id="" class="dropdown-arrow" label="▼"></w2:textbox>
					</xf:group>

					<!-- 사용자 드롭다운 메뉴 -->
					<xf:group id="userDropdown" class="user-dropdown" style="display:none; visibility:hidden; opacity:0;">
						<xf:group class="user-menu-item logout" ev:onclick="scwin.logout">
							<w2:textbox id="" label="🚪" style="font-size:14px; color:#dc3545;"></w2:textbox>
							<w2:textbox id="" label="로그아웃" style="font-size:14px; color:#dc3545;"></w2:textbox>
						</xf:group>
					</xf:group>
				</xf:group>
			</xf:group>
		</xf:group>
	</body>
</html>