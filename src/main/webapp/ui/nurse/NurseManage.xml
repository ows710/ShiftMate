<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
            <xf:instance>
                <data xmlns=""/>
            </xf:instance>
            <w2:dataCollection baseNode="map">
                <w2:dataMap baseNode="map" id="dmp_nurseVo">
                    <w2:keyInfo>
                        <w2:key id="nurseId" name="간호사ID" dataType="text"></w2:key>
                        <w2:key id="nurseName" name="간호사명" dataType="text"></w2:key>
                        <w2:key id="position" name="직급" dataType="text"></w2:key>
                        <w2:key id="career" name="경력" dataType="text"></w2:key>
                        <w2:key id="specialNote" name="특이사항" dataType="text"></w2:key>
                        <w2:key id="scNurseName" name="검색_간호사명" dataType="text"></w2:key>
                        <w2:key id="scPosition" name="검색_직급" dataType="text"></w2:key>
                        <w2:key id="pageIndex" name="페이지번호" dataType="text"></w2:key>
                        <w2:key id="pageSize" name="페이지크기" dataType="text"></w2:key>
                    </w2:keyInfo>
                </w2:dataMap>
                <w2:dataList baseNode="list" repeatNode="map" id="dlt_nurseList" saveRemovedData="true">
                    <w2:columnInfo>
                        <w2:column id="chk_select" name="선택" dataType="text"></w2:column>
                        <w2:column id="nurseId" name="간호사ID" dataType="text"></w2:column>
                        <w2:column id="nurseName" name="간호사명" dataType="text"></w2:column>
                        <w2:column id="position" name="직급" dataType="text"></w2:column>
                        <w2:column id="career" name="경력" dataType="text"></w2:column>
                        <w2:column id="specialNote" name="특이사항" dataType="text"></w2:column>
                        <w2:column id="regDate" name="등록일" dataType="text"></w2:column>
                        <w2:column id="modDate" name="수정일" dataType="text"></w2:column>
                        <w2:column id="useYn" name="사용여부" dataType="text"></w2:column>
                        <w2:column id="delYn" name="삭제여부" dataType="text"></w2:column>
                    </w2:columnInfo>
                </w2:dataList>
            </w2:dataCollection>
            <w2:workflowCollection></w2:workflowCollection>
            <xf:submission id="sbm_selectNurseList" ref='data:json,{"id":"dmp_nurseVo","key":"nurseVo"}' target="" action="/InsWebApp/nurse/list.pwkjson" method="post"
                mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
                processMsg="간호사 목록을 조회 중입니다." ev:submit="" ev:submitdone="scwin.sbm_selectNurseList_submitdone" ev:submiterror="" abortTrigger="">
            </xf:submission>
            <xf:submission id="sbm_selectNurse" ref='data:json,{"id":"dmp_nurseVo","key":"nurseVo"}' target="" action="/InsWebApp/nurse/view.pwkjson" method="post"
                mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
                processMsg="간호사 정보를 조회 중입니다." ev:submit="" ev:submitdone="scwin.sbm_selectNurse_submitdone" ev:submiterror="" abortTrigger="">
            </xf:submission>
            <xf:submission id="sbm_insertNurse" ref='data:json,{"id":"dmp_nurseVo","key":"nurseVo"}' target="" action="/InsWebApp/nurse/insert.pwkjson" method="post"
                mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
                processMsg="간호사 정보를 등록 중입니다." ev:submit="" ev:submitdone="scwin.sbm_insertNurse_submitdone" ev:submiterror="" abortTrigger="">
            </xf:submission>
            <xf:submission id="sbm_updateNurse" ref='data:json,{"id":"dmp_nurseVo","key":"nurseVo"}' target="" action="/InsWebApp/nurse/update.pwkjson" method="post"
                mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
                processMsg="간호사 정보를 수정 중입니다." ev:submit="" ev:submitdone="scwin.sbm_updateNurse_submitdone" ev:submiterror="" abortTrigger="">
            </xf:submission>
            <xf:submission id="sbm_deleteNurse" ref='data:json,{"id":"dmp_nurseVo","key":"nurseVo"}' target="" action="/InsWebApp/nurse/delete.pwkjson" method="post"
                mediatype="application/json" encoding="UTF-8" instance="" replace="" errorHandler="" customHandler="" mode="asynchronous"
                processMsg="간호사 정보를 삭제 중입니다." ev:submit="" ev:submitdone="scwin.sbm_deleteNurse_submitdone" ev:submiterror="" abortTrigger="">
            </xf:submission>
        </xf:model>
        <w2:layoutInfo>
        </w2:layoutInfo>
        <w2:publicInfo>
        </w2:publicInfo>
        <script type="text/javascript" lazy="false"><![CDATA[        
// 글로벌 변수
scwin.nurseCounter = 6; // 다음 간호사 ID용 카운터
scwin.nurseData = []; // 더미 데이터 저장용

scwin.onpageload = function(e) {
    // 페이지 로드 시 초기 설정
    dmp_nurseVo.set("pageIndex", 1);
    dmp_nurseVo.set("pageSize", 10);
    
    // 폼 초기화
    scwin.fn_clearForm();
    
    // 초기 더미 데이터 생성
    scwin.fn_initSampleData();
    
    // 간호사 목록 조회
    scwin.fn_selectNurseList();
    
    console.log("간호사 관리 페이지가 로드되었습니다.");
};

// 초기 더미 데이터 생성
scwin.fn_initSampleData = function() {
    scwin.nurseData = [
        {
            chk_select: "0",
            nurseId: "N001",
            nurseName: "김지연",
            position: "수간호사",
            career: "10년",
            specialNote: "응급실 전문, 응급처치 교육 담당",
            regDate: "2023-01-15",
            modDate: "2024-01-10",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N002", 
            nurseName: "박민지",
            position: "간호사",
            career: "5년",
            specialNote: "소아과 전문, 아동 심리 상담 가능",
            regDate: "2023-03-20",
            modDate: "2024-01-08",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N003",
            nurseName: "이서연", 
            position: "주임간호사",
            career: "8년",
            specialNote: "중환자실 경험, 야간 근무 가능",
            regDate: "2022-11-10",
            modDate: "2024-01-05",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N004",
            nurseName: "최유진",
            position: "간호사",
            career: "3년", 
            specialNote: "내과 전문, 당뇨 교육 인증",
            regDate: "2023-06-15",
            modDate: "2024-01-03",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N005",
            nurseName: "정하은",
            position: "간호사",
            career: "2년",
            specialNote: "신입 간호사, 정형외과 근무",
            regDate: "2023-08-01",
            modDate: "2023-12-20",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N006",
            nurseName: "한소영",
            position: "간호사",
            career: "4년",
            specialNote: "산부인과 전문, 출산 도우미 자격증",
            regDate: "2023-02-10",
            modDate: "2023-12-15",
            useYn: "Y",
            delYn: "N"
        },
        {
            chk_select: "0",
            nurseId: "N007",
            nurseName: "임수민",
            position: "주임간호사",
            career: "12년",
            specialNote: "수술실 전문, 마취 관리 경험",
            regDate: "2022-05-01",
            modDate: "2023-11-20",
            useYn: "Y",
            delYn: "N"
        }
    ];
    
    scwin.nurseCounter = 8; // 다음 ID용
};

// 간호사 목록 조회
scwin.fn_selectNurseList = function() {
    try {
        console.log("간호사 목록 조회 시작");
        
        // 검색 조건 적용
        var filteredData = scwin.fn_filterData();
        
        // 페이지네이션 적용
        var pageIndex = dmp_nurseVo.get("pageIndex") || 1;
        var pageSize = dmp_nurseVo.get("pageSize") || 10;
        var startIdx = (pageIndex - 1) * pageSize;
        var endIdx = startIdx + pageSize;
        
        var pagedData = filteredData.slice(startIdx, endIdx);
        
        // 데이터 로드
        dlt_nurseList.setJSON(pagedData);
        
        console.log("간호사 목록 조회 완료 - 총 " + filteredData.length + "건 (현재 페이지: " + pagedData.length + "건)");
        
        // 체크박스 초기화
        scwin.fn_clearAllChecks();
        
    } catch (error) {
        console.error("간호사 목록 조회 오류:", error);
        alert("데이터 조회 중 오류가 발생했습니다.");
    }
};

// 검색 조건에 따른 데이터 필터링
scwin.fn_filterData = function() {
    var scNurseName = dmp_nurseVo.get("scNurseName") || "";
    var scPosition = dmp_nurseVo.get("scPosition") || "";
    
    return scwin.nurseData.filter(function(item) {
        if (item.delYn === "Y") return false; // 삭제된 데이터 제외
        
        var nameMatch = !scNurseName || item.nurseName.indexOf(scNurseName) > -1;
        var positionMatch = !scPosition || item.position.indexOf(scPosition) > -1;
        
        return nameMatch && positionMatch;
    });
};

// 간호사 목록 조회 완료 (서버 연동용 - 현재는 더미 데이터 사용)
scwin.sbm_selectNurseList_submitdone = function(e) {
    // 서버 연동 시 사용될 함수
    console.log("서버 연동 모드 - 현재는 더미 데이터 사용");
};

// 간호사 상세 조회
scwin.fn_selectNurse = function(nurseId) {
    var nurseInfo = scwin.nurseData.find(function(item) {
        return item.nurseId === nurseId && item.delYn !== "Y";
    });
    
    if (nurseInfo) {
        dmp_nurseVo.setJSON(nurseInfo);
        console.log("간호사 정보 조회 완료:", nurseInfo.nurseName);
    } else {
        alert("간호사 정보를 찾을 수 없습니다.");
    }
};

// 간호사 상세 조회 완료 (서버 연동용)
scwin.sbm_selectNurse_submitdone = function(e) {
    console.log("서버 연동 모드 - 현재는 더미 데이터 사용");
};

// 간호사 등록
scwin.fn_insertNurse = function() {
    var newNurse = {
        chk_select: "0",
        nurseId: "N" + String(scwin.nurseCounter).padStart(3, '0'),
        nurseName: dmp_nurseVo.get("nurseName"),
        position: dmp_nurseVo.get("position"),
        career: dmp_nurseVo.get("career") || "",
        specialNote: dmp_nurseVo.get("specialNote") || "",
        regDate: scwin.fn_getCurrentDate(),
        modDate: scwin.fn_getCurrentDate(),
        useYn: "Y",
        delYn: "N"
    };
    
    scwin.nurseData.push(newNurse);
    scwin.nurseCounter++;
    
    alert("간호사 정보가 등록되었습니다.");
    scwin.fn_clearForm();
    scwin.fn_selectNurseList();
    
    console.log("간호사 등록 완료:", newNurse.nurseName, "(ID: " + newNurse.nurseId + ")");
};

// 간호사 등록 완료 (서버 연동용)
scwin.sbm_insertNurse_submitdone = function(e) {
    scwin.fn_insertNurse();
};

// 간호사 수정
scwin.fn_updateNurse = function() {
    var nurseId = dmp_nurseVo.get("nurseId");
    if (!nurseId) {
        alert("수정할 간호사를 선택해주세요.");
        return;
    }
    
    var index = scwin.nurseData.findIndex(function(item) {
        return item.nurseId === nurseId;
    });
    
    if (index > -1) {
        scwin.nurseData[index].nurseName = dmp_nurseVo.get("nurseName");
        scwin.nurseData[index].position = dmp_nurseVo.get("position");
        scwin.nurseData[index].career = dmp_nurseVo.get("career") || "";
        scwin.nurseData[index].specialNote = dmp_nurseVo.get("specialNote") || "";
        scwin.nurseData[index].modDate = scwin.fn_getCurrentDate();
        
        alert("간호사 정보가 수정되었습니다.");
        scwin.fn_selectNurseList();
        
        console.log("간호사 수정 완료:", scwin.nurseData[index].nurseName);
    } else {
        alert("수정할 간호사 정보를 찾을 수 없습니다.");
    }
};

// 간호사 수정 완료 (서버 연동용)
scwin.sbm_updateNurse_submitdone = function(e) {
    scwin.fn_updateNurse();
};

// 간호사 삭제
scwin.fn_deleteNurse = function(nurseId) {
    var index = scwin.nurseData.findIndex(function(item) {
        return item.nurseId === nurseId;
    });
    
    if (index > -1) {
        scwin.nurseData[index].delYn = "Y";
        scwin.nurseData[index].modDate = scwin.fn_getCurrentDate();
        
        console.log("간호사 삭제 완료:", scwin.nurseData[index].nurseName);
        return true;
    }
    return false;
};

// 간호사 삭제 완료 (서버 연동용)
scwin.sbm_deleteNurse_submitdone = function(e) {
    var nurseId = dmp_nurseVo.get("nurseId");
    if (scwin.fn_deleteNurse(nurseId)) {
        alert("간호사 정보가 삭제되었습니다.");
        scwin.fn_clearForm();
        scwin.fn_selectNurseList();
    } else {
        alert("삭제할 간호사 정보를 찾을 수 없습니다.");
    }
};

// 검색 버튼 클릭
scwin.btn_search_onclick = function() {
    dmp_nurseVo.set("pageIndex", 1);
    scwin.fn_selectNurseList();
    console.log("검색 실행 - 조건: 간호사명='" + (dmp_nurseVo.get("scNurseName") || "") + "', 직급='" + (dmp_nurseVo.get("scPosition") || "") + "'");
};

// 초기화 버튼 클릭
scwin.btn_reset_onclick = function() {
    scwin.fn_clearForm();
    scwin.fn_selectNurseList();
    console.log("검색 조건 초기화");
};

// 등록 버튼 클릭
scwin.btn_insert_onclick = function() {
    if (scwin.fn_validateForm()) {
        scwin.fn_insertNurse();
    }
};

// 수정 버튼 클릭
scwin.btn_update_onclick = function() {
    if (scwin.fn_validateForm()) {
        scwin.fn_updateNurse();
    }
};

// 삭제 버튼 클릭
scwin.btn_delete_onclick = function() {
    var nurseId = dmp_nurseVo.get("nurseId");
    if (!nurseId) {
        alert("삭제할 간호사를 선택해주세요.");
        return;
    }
    
    if (confirm("선택한 간호사 정보를 삭제하시겠습니까?")) {
        if (scwin.fn_deleteNurse(nurseId)) {
            alert("간호사 정보가 삭제되었습니다.");
            scwin.fn_clearForm();
            scwin.fn_selectNurseList();
        }
    }
};

// 다중 삭제 버튼 클릭
scwin.btn_delete_multi_onclick = function() {
    var selectedRows = scwin.fn_getSelectedRows();
    
    if (selectedRows.length === 0) {
        alert("삭제할 간호사를 선택해주세요.");
        return;
    }
    
    if (confirm("선택한 " + selectedRows.length + "건의 간호사 정보를 삭제하시겠습니까?")) {
        var deletedCount = 0;
        
        selectedRows.forEach(function(row) {
            var nurseId = dlt_nurseList.getCellData(row, "nurseId");
            if (scwin.fn_deleteNurse(nurseId)) {
                deletedCount++;
            }
        });
        
        alert(deletedCount + "건의 간호사 정보가 삭제되었습니다.");
        scwin.fn_clearForm();
        scwin.fn_selectNurseList();
    }
};

// 선택된 행 가져오기
scwin.fn_getSelectedRows = function() {
    var selectedRows = [];
    var rowCount = dlt_nurseList.getRowCount();
    
    for (var i = 0; i < rowCount; i++) {
        var isChecked = dlt_nurseList.getCellData(i, "chk_select");
        if (isChecked === "1" || isChecked === true) {
            selectedRows.push(i);
        }
    }
    
    return selectedRows;
};

// 모든 체크박스 해제
scwin.fn_clearAllChecks = function() {
    var rowCount = dlt_nurseList.getRowCount();
    for (var i = 0; i < rowCount; i++) {
        dlt_nurseList.setCellData(i, "chk_select", "0");
    }
};

// 그리드 행 클릭
scwin.grd_nurseList_oncellclick = function(row, col) {
    // 체크박스 컬럼 클릭 시 체크 상태 토글
    if (col === 0) {
        var currentValue = dlt_nurseList.getCellData(row, "chk_select");
        var newValue = (currentValue === "1" || currentValue === true) ? "0" : "1";
        dlt_nurseList.setCellData(row, "chk_select", newValue);
        return;
    }
    
    // 다른 컬럼 클릭 시 상세 정보 로드
    var nurseId = dlt_nurseList.getCellData(row, "nurseId");
    if (nurseId) {
        scwin.fn_selectNurse(nurseId);
    }
};

// 폼 검증
scwin.fn_validateForm = function() {
    var nurseName = dmp_nurseVo.get("nurseName");
    var position = dmp_nurseVo.get("position");
    
    if (!nurseName || nurseName.trim() === "") {
        alert("간호사명을 입력해주세요.");
        ipt_nurseName.focus();
        return false;
    }
    
    if (nurseName.trim().length < 2) {
        alert("간호사명은 2글자 이상 입력해주세요.");
        ipt_nurseName.focus();
        return false;
    }
    
    if (!position || position.trim() === "") {
        alert("직급을 입력해주세요.");
        ipt_position.focus();
        return false;
    }
    
    // 중복 검사 (수정 시에는 본인 제외)
    var nurseId = dmp_nurseVo.get("nurseId");
    var duplicateNurse = scwin.nurseData.find(function(item) {
        return item.nurseName === nurseName.trim() && 
               item.delYn !== "Y" && 
               item.nurseId !== nurseId;
    });
    
    if (duplicateNurse) {
        alert("이미 등록된 간호사명입니다.");
        ipt_nurseName.focus();
        return false;
    }
    
    return true;
};

// 폼 초기화
scwin.fn_clearForm = function() {
    dmp_nurseVo.set("nurseId", "");
    dmp_nurseVo.set("nurseName", "");
    dmp_nurseVo.set("position", "");
    dmp_nurseVo.set("career", "");
    dmp_nurseVo.set("specialNote", "");
    dmp_nurseVo.set("scNurseName", "");
    dmp_nurseVo.set("scPosition", "");
};

// 현재 날짜 반환
scwin.fn_getCurrentDate = function() {
    var now = new Date();
    var year = now.getFullYear();
    var month = String(now.getMonth() + 1).padStart(2, '0');
    var day = String(now.getDate()).padStart(2, '0');
    return year + "-" + month + "-" + day;
};

// 엑셀 업로드
scwin.btn_excel_onclick = function() {
    try {
        var jsnOptions = {
            headerExist: "1", // Excel 파일에 헤더가 있는지 여부
            uploadDataCallBack: scwin.fn_excelUploadCallback // 업로드 완료 후 콜백
        };

        // WebSquare의 엑셀 업로드 기능 사용
        if (grd_nurseList.advancedExcelUpload) {
            grd_nurseList.advancedExcelUpload(jsnOptions);
        } else {
            // 대체 방법: 파일 업로드 시뮬레이션
            scwin.fn_simulateExcelUpload();
        }
    } catch (error) {
        console.error("엑셀 업로드 오류:", error);
        scwin.fn_simulateExcelUpload();
    }
};

// 엑셀 업로드 시뮬레이션 (실제 기능이 없을 경우)
scwin.fn_simulateExcelUpload = function() {
    if (confirm("엑셀 업로드 기능을 시뮬레이션하시겠습니까?\n샘플 데이터 3건이 추가됩니다.")) {
        var sampleUploadData = [
            {
                nurseName: "엑셀업로드_김영희",
                position: "간호사", 
                career: "1년",
                specialNote: "엑셀로 업로드된 데이터"
            },
            {
                nurseName: "엑셀업로드_이철수",
                position: "주임간호사",
                career: "6년", 
                specialNote: "엑셀로 업로드된 데이터"
            },
            {
                nurseName: "엑셀업로드_박수진",
                position: "간호사",
                career: "2년",
                specialNote: "엑셀로 업로드된 데이터"
            }
        ];
        
        sampleUploadData.forEach(function(data) {
            var newNurse = {
                chk_select: "0",
                nurseId: "N" + String(scwin.nurseCounter).padStart(3, '0'),
                nurseName: data.nurseName,
                position: data.position,
                career: data.career,
                specialNote: data.specialNote,
                regDate: scwin.fn_getCurrentDate(),
                modDate: scwin.fn_getCurrentDate(),
                useYn: "Y",
                delYn: "N"
            };
            
            scwin.nurseData.push(newNurse);
            scwin.nurseCounter++;
        });
        
        alert("엑셀 업로드 완료: " + sampleUploadData.length + "건의 데이터가 추가되었습니다.");
        scwin.fn_selectNurseList();
    }
};

// 엑셀 업로드 완료 콜백
scwin.fn_excelUploadCallback = function(uploadData) {
    if (uploadData && uploadData.length > 0) {
        var addedCount = 0;
        
        uploadData.forEach(function(data) {
            // 필수 필드 검증
            if (data.nurseName && data.position) {
                var newNurse = {
                    chk_select: "0",
                    nurseId: "N" + String(scwin.nurseCounter).padStart(3, '0'),
                    nurseName: data.nurseName,
                    position: data.position,
                    career: data.career || "",
                    specialNote: data.specialNote || "",
                    regDate: scwin.fn_getCurrentDate(),
                    modDate: scwin.fn_getCurrentDate(),
                    useYn: "Y",
                    delYn: "N"
                };
                
                scwin.nurseData.push(newNurse);
                scwin.nurseCounter++;
                addedCount++;
            }
        });
        
        alert("엑셀 업로드 완료: " + addedCount + "건의 간호사 정보가 등록되었습니다.");
        scwin.fn_selectNurseList();
    } else {
        alert("업로드할 데이터가 없습니다.");
    }
};

]]></script>
        <style type="text/css">
/* 간호사 관리 페이지 전용 CSS */

/* 전체 컨테이너 */
.nurse-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f8f9fa;
}

/* 페이지 헤더 */
.nurse-header {
    background: linear-gradient(135deg, #1C3D6B 0%, #2E5984 100%);
    color: white;
    padding: 30px;
    border-radius: 12px;
    margin-bottom: 30px;
    box-shadow: 0 4px 20px rgba(28, 61, 107, 0.3);
}

.nurse-header h1 {
    margin: 0;
    font-size: 2.5em;
    font-weight: 300;
    text-align: center;
}

.nurse-header .subtitle {
    text-align: center;
    font-size: 1.1em;
    opacity: 0.9;
    margin-top: 10px;
}

/* 검색 영역 */
.nurse-search-section {
    background: white;
    padding: 25px;
    border-radius: 12px;
    margin-bottom: 25px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.nurse-search-title {
    font-size: 1.3em;
    font-weight: 600;
    color: #1C3D6B;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 2px solid #e9ecef;
}

.nurse-search-form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    align-items: end;
}

.nurse-form-group {
    display: flex;
    flex-direction: column;
}

.nurse-form-group label {
    font-weight: 600;
    color: #495057;
    margin-bottom: 8px;
    font-size: 0.95em;
}

.nurse-form-group input,
.nurse-form-group select {
    padding: 12px 16px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1em;
    transition: all 0.3s ease;
    background-color: white;
}

.nurse-form-group input:focus,
.nurse-form-group select:focus {
    outline: none;
    border-color: #1C3D6B;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1);
}

.nurse-radio-group {
    display: flex;
    gap: 15px;
    margin-top: 8px;
}

.nurse-radio-item {
    display: flex;
    align-items: center;
    gap: 5px;
}

.nurse-radio-item input[type="radio"] {
    width: 18px;
    height: 18px;
    margin: 0;
}

.nurse-radio-item label {
    margin: 0;
    font-weight: 500;
    cursor: pointer;
}

/* 버튼 스타일 */
.nurse-btn {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-size: 1em;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    min-width: 120px;
    justify-content: center;
}

.nurse-btn-primary {
    background: linear-gradient(135deg, #1C3D6B 0%, #2E5984 100%);
    color: white;
}

.nurse-btn-primary:hover {
    background: linear-gradient(135deg, #153252 0%, #1C3D6B 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(28, 61, 107, 0.3);
}

.nurse-btn-secondary {
    background: #6c757d;
    color: white;
}

.nurse-btn-secondary:hover {
    background: #5a6268;
    transform: translateY(-2px);
}

.nurse-btn-success {
    background: #28a745;
    color: white;
}

.nurse-btn-success:hover {
    background: #218838;
    transform: translateY(-2px);
}

.nurse-btn-danger {
    background: #dc3545;
    color: white;
}

.nurse-btn-danger:hover {
    background: #c82333;
    transform: translateY(-2px);
}

.nurse-btn-warning {
    background: #ffc107;
    color: #212529;
}

.nurse-btn-warning:hover {
    background: #e0a800;
    transform: translateY(-2px);
}

/* 그리드 영역 */
.nurse-grid-section {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 25px;
}

.nurse-grid-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 20px 25px;
    border-bottom: 1px solid #dee2e6;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.nurse-grid-title {
    font-size: 1.3em;
    font-weight: 600;
    color: #1C3D6B;
    margin: 0;
}

.nurse-grid-actions {
    display: flex;
    gap: 10px;
}

.nurse-grid-content {
    padding: 25px;
}

/* 테이블 스타일 */
.nurse-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.nurse-table th,
.nurse-table td {
    padding: 15px 12px;
    text-align: left;
    border-bottom: 1px solid #e9ecef;
}

.nurse-table th {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    font-weight: 600;
    color: #495057;
    position: sticky;
    top: 0;
    z-index: 10;
}

.nurse-table tbody tr {
    transition: all 0.2s ease;
}

.nurse-table tbody tr:hover {
    background-color: #f8f9fa;
    transform: scale(1.01);
}

.nurse-table td {
    vertical-align: middle;
}

.nurse-table .checkbox-cell {
    width: 50px;
    text-align: center;
}

.nurse-table .checkbox-cell input[type="checkbox"] {
    width: 18px;
    height: 18px;
    cursor: pointer;
}

/* 입력 폼 영역 */
.nurse-form-section {
    background: white;
    padding: 25px;
    border-radius: 12px;
    margin-bottom: 25px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.nurse-form-title {
    font-size: 1.3em;
    font-weight: 600;
    color: #1C3D6B;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 2px solid #e9ecef;
}

.nurse-form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
}

.nurse-form-row {
    display: grid;
    grid-template-columns: 150px 1fr;
    gap: 15px;
    align-items: center;
    margin-bottom: 20px;
}

.nurse-form-label {
    font-weight: 600;
    color: #495057;
    text-align: right;
    padding-right: 10px;
}

.nurse-form-input {
    padding: 12px 16px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1em;
    transition: all 0.3s ease;
}

.nurse-form-input:focus {
    outline: none;
    border-color: #1C3D6B;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1);
}

.nurse-form-textarea {
    min-height: 100px;
    resize: vertical;
}

.nurse-form-select {
    padding: 12px 16px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1em;
    background-color: white;
    cursor: pointer;
    transition: all 0.3s ease;
}

.nurse-form-select:focus {
    outline: none;
    border-color: #1C3D6B;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1);
}

/* 버튼 그룹 */
.nurse-btn-group {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid #e9ecef;
}

/* 상태 표시 */
.nurse-status {
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.85em;
    font-weight: 600;
    text-transform: uppercase;
}

.nurse-status.active {
    background-color: #d4edda;
    color: #155724;
}

.nurse-status.inactive {
    background-color: #f8d7da;
    color: #721c24;
}

/* 페이지네이션 */
.nurse-pagination {
    display: flex;
    justify-content: center;
    gap: 5px;
    margin-top: 30px;
}

.nurse-pagination .page-btn {
    padding: 8px 12px;
    border: 1px solid #dee2e6;
    background: white;
    color: #495057;
    text-decoration: none;
    border-radius: 6px;
    transition: all 0.2s ease;
}

.nurse-pagination .page-btn:hover {
    background: #e9ecef;
    border-color: #adb5bd;
}

.nurse-pagination .page-btn.active {
    background: #1C3D6B;
    color: white;
    border-color: #1C3D6B;
}

/* 반응형 디자인 */
@media (max-width: 768px) {
    .nurse-container {
        padding: 15px;
    }
    
    .nurse-header {
        padding: 20px;
    }
    
    .nurse-header h1 {
        font-size: 2em;
    }
    
    .nurse-search-form {
        grid-template-columns: 1fr;
    }
    
    .nurse-grid-header {
        flex-direction: column;
        gap: 15px;
        align-items: stretch;
    }
    
    .nurse-grid-actions {
        justify-content: center;
    }
    
    .nurse-form-row {
        grid-template-columns: 1fr;
        gap: 8px;
    }
    
    .nurse-form-label {
        text-align: left;
        padding-right: 0;
    }
    
    .nurse-btn-group {
        flex-direction: column;
        align-items: stretch;
    }
    
    .nurse-table {
        font-size: 0.9em;
    }
    
    .nurse-table th,
    .nurse-table td {
        padding: 10px 8px;
    }
}

/* 애니메이션 */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.nurse-fade-in {
    animation: fadeIn 0.5s ease-out;
}

/* 로딩 스피너 */
.nurse-loading {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px;
}

.nurse-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #1C3D6B;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* 알림 메시지 */
.nurse-alert {
    padding: 15px 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    border-left: 4px solid;
}

.nurse-alert.success {
    background-color: #d4edda;
    color: #155724;
    border-left-color: #28a745;
}

.nurse-alert.error {
    background-color: #f8d7da;
    color: #721c24;
    border-left-color: #dc3545;
}

.nurse-alert.warning {
    background-color: #fff3cd;
    color: #856404;
    border-left-color: #ffc107;
}

.nurse-alert.info {
    background-color: #d1ecf1;
    color: #0c5460;
    border-left-color: #17a2b8;
}

/* 기본 WebSquare 스타일 조정 */
.sub_contents {
    padding: 20px;
    background-color: #f8f9fa;
}

.search_area {
    background: white;
    padding: 25px;
    border-radius: 12px;
    margin-bottom: 25px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.search_row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    align-items: end;
}

.search_item {
    display: flex;
    flex-direction: column;
}

.search_label {
    font-weight: 600 !important;
    color: #495057 !important;
    margin-bottom: 8px !important;
    font-size: 0.95em !important;
}

.search_input {
    padding: 12px 16px !important;
    border: 2px solid #e9ecef !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    transition: all 0.3s ease !important;
    background-color: white !important;
}

.search_input:focus {
    outline: none !important;
    border-color: #1C3D6B !important;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1) !important;
}

.search_buttons {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
}

.btn_search, .btn_reset {
    padding: 12px 24px !important;
    border: none !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    font-weight: 600 !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
    text-decoration: none !important;
    display: inline-flex !important;
    align-items: center !important;
    gap: 8px !important;
    min-width: 120px !important;
    justify-content: center !important;
}

.btn_search {
    background: linear-gradient(135deg, #1C3D6B 0%, #2E5984 100%) !important;
    color: white !important;
}

.btn_search:hover {
    background: linear-gradient(135deg, #153252 0%, #1C3D6B 100%) !important;
    transform: translateY(-2px) !important;
    box-shadow: 0 4px 15px rgba(28, 61, 107, 0.3) !important;
}

.btn_reset {
    background: #6c757d !important;
    color: white !important;
}

.btn_reset:hover {
    background: #5a6268 !important;
    transform: translateY(-2px) !important;
}

.content_area {
    display: flex;
    flex-direction: column;
    gap: 25px;
}

.grid_section {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.grid_header {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 20px 25px;
    border-bottom: 1px solid #dee2e6;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.grid_title {
    font-size: 1.3em !important;
    font-weight: 600 !important;
    color: #1C3D6B !important;
    margin: 0 !important;
}

.grid_buttons {
    display: flex;
    gap: 10px;
}

.btn_excel {
    padding: 12px 24px !important;
    border: none !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    font-weight: 600 !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
    background: #28a745 !important;
    color: white !important;
}

.btn_excel:hover {
    background: #218838 !important;
    transform: translateY(-2px) !important;
}

.btn_delete_multi {
    padding: 12px 24px !important;
    border: none !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    font-weight: 600 !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
    background: #dc3545 !important;
    color: white !important;
}

.btn_delete_multi:hover {
    background: #c82333 !important;
    transform: translateY(-2px) !important;
}

.grid_view {
    margin: 25px !important;
}

.form_section {
    background: white;
    padding: 25px;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.form_header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 2px solid #e9ecef;
}

.form_title {
    font-size: 1.3em !important;
    font-weight: 600 !important;
    color: #1C3D6B !important;
    margin: 0 !important;
}

.form_buttons {
    display: flex;
    gap: 10px;
}

.btn_insert, .btn_update, .btn_delete {
    padding: 12px 24px !important;
    border: none !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    font-weight: 600 !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
    text-decoration: none !important;
    display: inline-flex !important;
    align-items: center !important;
    gap: 8px !important;
    min-width: 120px !important;
    justify-content: center !important;
}

.btn_insert {
    background: #28a745 !important;
    color: white !important;
}

.btn_insert:hover {
    background: #218838 !important;
    transform: translateY(-2px) !important;
}

.btn_update {
    background: #ffc107 !important;
    color: #212529 !important;
}

.btn_update:hover {
    background: #e0a800 !important;
    transform: translateY(-2px) !important;
}

.btn_delete {
    background: #dc3545 !important;
    color: white !important;
}

.btn_delete:hover {
    background: #c82333 !important;
    transform: translateY(-2px) !important;
}

.form_content {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.form_row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
}

.form_item {
    display: grid;
    grid-template-columns: 150px 1fr;
    gap: 15px;
    align-items: center;
}

.form_item.full_width {
    grid-column: 1 / -1;
}

.form_label {
    font-weight: 600 !important;
    color: #495057 !important;
    text-align: right !important;
    padding-right: 10px !important;
}

.form_label.required::after {
    content: ' *';
    color: #dc3545;
}

.form_input {
    padding: 12px 16px !important;
    border: 2px solid #e9ecef !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    transition: all 0.3s ease !important;
}

.form_input:focus {
    outline: none !important;
    border-color: #1C3D6B !important;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1) !important;
}

.form_textarea {
    padding: 12px 16px !important;
    border: 2px solid #e9ecef !important;
    border-radius: 8px !important;
    font-size: 1em !important;
    transition: all 0.3s ease !important;
    min-height: 100px !important;
    resize: vertical !important;
}

.form_textarea:focus {
    outline: none !important;
    border-color: #1C3D6B !important;
    box-shadow: 0 0 0 3px rgba(28, 61, 107, 0.1) !important;
}
        </style>
    </head>
    <body>
        <xf:group class="sub_contents">            
            <xf:group class="search_area">
                <xf:group class="search_row">
                    <xf:group class="search_item">
                        <w2:textbox class="search_label" id="lbl_nurseName_search" label="간호사명"></w2:textbox>
                        <xf:input class="search_input" id="ipt_scNurseName" ref="data:dmp_nurseVo.scNurseName"></xf:input>
                    </xf:group>
                    <xf:group class="search_item">
                        <w2:textbox class="search_label" id="lbl_position_search" label="직급"></w2:textbox>
                        <xf:input class="search_input" id="ipt_scPosition" ref="data:dmp_nurseVo.scPosition"></xf:input>
                    </xf:group>
                    <xf:group class="search_buttons">
                        <xf:trigger class="btn_search" id="btn_search" type="button" ev:onclick="scwin.btn_search_onclick">
                            <xf:label>🔍 검색</xf:label>
                        </xf:trigger>
                        <xf:trigger class="btn_reset" id="btn_reset" type="button" ev:onclick="scwin.btn_reset_onclick">
                            <xf:label>🔄 초기화</xf:label>
                        </xf:trigger>
                    </xf:group>
                </xf:group>
            </xf:group>
            
            <xf:group class="content_area">
                <xf:group class="grid_section">
                    <xf:group class="grid_header">
                        <w2:textbox class="grid_title" id="txt_gridTitle" label="간호사 목록"></w2:textbox>
                                                <xf:group class="grid_buttons">
                            <xf:trigger class="btn_excel" id="btn_excel" type="button" ev:onclick="scwin.btn_excel_onclick">
                                <xf:label>📤 엑셀 업로드</xf:label>
                            </xf:trigger>
                            <xf:trigger class="btn_delete_multi" id="btn_delete_multi" type="button" ev:onclick="scwin.btn_delete_multi_onclick">
                                <xf:label>🗑️ 선택 삭제</xf:label>
                            </xf:trigger>
                        </xf:group>
                    </xf:group>
                    
                    <w2:gridView class="grid_view" id="grd_nurseList" dataList="data:dlt_nurseList" 
                        style="width:100%;height:300px;" scrollByColumn="false" defaultCellHeight="35" 
                        rowNumVisible="true" ev:oncellclick="scwin.grd_nurseList_oncellclick">
                        <w2:caption id="caption1" value="간호사 목록"></w2:caption>
                        <w2:header id="header1">
                            <w2:row id="row1">
                                <w2:column width="50" inputType="checkbox" style="height:35px" id="columnCheck" value="선택" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="column9" value="간호사ID" displayMode="label"></w2:column>
                                <w2:column width="120" inputType="text" style="height:35px" id="column1" value="간호사명" displayMode="label"></w2:column>
                                <w2:column width="100" inputType="text" style="height:35px" id="column2" value="직급" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="column3" value="경력" displayMode="label"></w2:column>
                                <w2:column width="150" inputType="text" style="height:35px" id="column4" value="특이사항" displayMode="label"></w2:column>
                                <w2:column width="100" inputType="text" style="height:35px" id="column5" value="등록일" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="column6" value="사용여부" displayMode="label"></w2:column>
                            </w2:row>
                        </w2:header>
                        <w2:gBody id="gBody1">
                            <w2:row id="row2">
                                <w2:column width="50" inputType="checkbox" style="height:35px" id="chk_select" value="" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="nurseId" value="" displayMode="label"></w2:column>
                                <w2:column width="120" inputType="text" style="height:35px" id="nurseName" value="" displayMode="label"></w2:column>
                                <w2:column width="100" inputType="text" style="height:35px" id="position" value="" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="career" value="" displayMode="label"></w2:column>
                                <w2:column width="150" inputType="text" style="height:35px" id="specialNote" value="" displayMode="label"></w2:column>
                                <w2:column width="100" inputType="text" style="height:35px" id="regDate" value="" displayMode="label"></w2:column>
                                <w2:column width="80" inputType="text" style="height:35px" id="useYn" value="" displayMode="label"></w2:column>
                            </w2:row>
                        </w2:gBody>
                    </w2:gridView>
                </xf:group>
                
                <xf:group class="form_section">
                    <xf:group class="form_header">
                        <w2:textbox class="form_title" id="txt_formTitle" label="간호사 정보"></w2:textbox>
                        <xf:group class="form_buttons">
                            <xf:trigger class="btn_insert" id="btn_insert" type="button" ev:onclick="scwin.btn_insert_onclick">
                                <xf:label>➕ 등록</xf:label>
                            </xf:trigger>
                            <xf:trigger class="btn_update" id="btn_update" type="button" ev:onclick="scwin.btn_update_onclick">
                                <xf:label>✏️ 수정</xf:label>
                            </xf:trigger>
                            <xf:trigger class="btn_delete" id="btn_delete" type="button" ev:onclick="scwin.btn_delete_onclick">
                                <xf:label>🗑️ 삭제</xf:label>
                            </xf:trigger>
                        </xf:group>
                    </xf:group>
                    
                    <xf:group class="form_content">
                        <xf:group class="form_row">
                            <xf:group class="form_item">
                                <w2:textbox class="form_label" id="lbl_nurseId" label="간호사ID"></w2:textbox>
                                <xf:input class="form_input" id="ipt_nurseId" ref="data:dmp_nurseVo.nurseId" readonly="true"></xf:input>
                            </xf:group>
                            <xf:group class="form_item">
                                <w2:textbox class="form_label required" id="lbl_nurseName_form" label="간호사명"></w2:textbox>
                                <xf:input class="form_input" id="ipt_nurseName" ref="data:dmp_nurseVo.nurseName"></xf:input>
                            </xf:group>
                        </xf:group>
                        
                        <xf:group class="form_row">
                            <xf:group class="form_item">
                                <w2:textbox class="form_label required" id="lbl_position_form" label="직급"></w2:textbox>
                                <xf:input class="form_input" id="ipt_position" ref="data:dmp_nurseVo.position"></xf:input>
                            </xf:group>
                            <xf:group class="form_item">
                                <w2:textbox class="form_label" id="lbl_career" label="경력"></w2:textbox>
                                <xf:input class="form_input" id="ipt_career" ref="data:dmp_nurseVo.career"></xf:input>
                            </xf:group>
                        </xf:group>
                        
                        <xf:group class="form_row">
                            <xf:group class="form_item full_width">
                                <w2:textbox class="form_label" id="lbl_specialNote" label="특이사항"></w2:textbox>
                                <xf:textarea class="form_textarea" id="txt_specialNote" ref="data:dmp_nurseVo.specialNote" rows="3"></xf:textarea>
                            </xf:group>
                        </xf:group>
                    </xf:group>
                </xf:group>
            </xf:group>
        </xf:group>
    </body>
</html>