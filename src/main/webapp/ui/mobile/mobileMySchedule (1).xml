<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:w2="http://www.inswave.com/websquare"
	xmlns:xf="http://www.w3.org/2002/xforms">
	<head meta_screenName="내 스케줄 보기(웹)">
		<w2:type>COMPONENT</w2:type>
		<w2:buildDate />
		<w2:MSA />
		<xf:model>
			<w2:dataCollection baseNode="map">
				<w2:dataList id="dlt_schedule" baseNode="list">
					<w2:columnInfo>
						<w2:column id="id" name="일정ID" dataType="text" />
						<w2:column id="title" name="제목" dataType="text" />
						<w2:column id="start" name="시작일" dataType="text" />
						<w2:column id="end" name="종료일" dataType="text" />
						<w2:column id="allDay" name="종일" dataType="text" />
						<w2:column id="color" name="색상" dataType="text" />
						<w2:column id="backgroundColor" name="배경색상" dataType="text" />
						<w2:column id="borderColor" name="테두리색상" dataType="text" />
						<w2:column id="textColor" name="텍스트색상" dataType="text" />
						<w2:column id="className" name="클래스명" dataType="text" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="dlt_monthOptions" baseNode="list">
					<w2:columnInfo>
						<w2:column id="value" name="값" dataType="text" />
						<w2:column id="label" name="라벨" dataType="text" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataList id="dlt_workers" baseNode="list">
					<w2:columnInfo>
						<w2:column id="name" name="이름" dataType="text" />
						<w2:column id="isLeader" name="팀장여부" dataType="text" />
						<w2:column id="isAbsent" name="결근여부" dataType="text" />
					</w2:columnInfo>
				</w2:dataList>
				<w2:dataMap baseNode="map" id="dm_selectedDate">
					<w2:keyInfo>
						<w2:key id="date" name="선택날짜" dataType="text" />
						<w2:key id="dayOfWeek" name="요일" dataType="text" />
					</w2:keyInfo>
				</w2:dataMap>
			</w2:dataCollection>
			<w2:workflowCollection />
		</xf:model>
		<w2:layoutInfo />
		<w2:publicInfo method="" />
		<style type="text/css">
			/* 팝업 스타일 */
			.worker-popup {
			position: fixed;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			background: white;
			border-radius: 8px;
			box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
			z-index: 1000;
			width: 280px;
			padding: 0;
			font-family: Arial, sans-serif;
			}

			.popup-overlay {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: rgba(0, 0, 0, 0.5);
			z-index: 999;
			}

			.popup-header {
			background: #f8f9fa;
			padding: 16px 20px;
			border-radius: 8px 8px 0 0;
			border-bottom: 1px solid #e9ecef;
			text-align: center;
			}

			.popup-date {
			font-size: 16px;
			font-weight: bold;
			color: #333;
			margin: 0;
			}

			.popup-content {
			padding: 16px 20px;
			max-height: 300px;
			overflow-y: auto;
			}

			.worker-item {
			display: flex;
			align-items: center;
			padding: 8px 0;
			border-bottom: 1px solid #f1f3f4;
			}

			.worker-item:last-child {
			border-bottom: none;
			}

			.worker-name {
			font-size: 14px;
			color: #333;
			margin-right: 8px;
			}

			.leader-crown {
			color: #ffd700;
			font-size: 16px;
			margin-right: 4px;
			}

			.absent-mark {
			color: #17a2b8;
			font-size: 12px;
			margin-left: auto;
			}

			.popup-footer {
			padding: 16px 20px;
			border-top: 1px solid #e9ecef;
			text-align: center;
			}

			.confirm-btn {
			background: #1e3a8a;
			color: white;
			border: none;
			padding: 8px 24px;
			border-radius: 4px;
			font-size: 14px;
			cursor: pointer;
			min-width: 60px;
			}

			.confirm-btn:hover {
			background: #1e40af;
			}

			.hidden {
			display: none !important;
			}
		</style>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script lazy="false" type="text/javascript"><![CDATA[
scwin.onpageload = function() {
    console.log("내 스케줄 보기 페이지가 로드되었습니다.");
    
    // 알림 시스템 초기화
    setTimeout(function() {
        try {
            console.log("내 스케줄 알림 시스템 초기화 중...");
            if (scwin.notifications && scwin.updateNotificationBadge) {
                scwin.updateNotificationBadge();
                console.log("내 스케줄 알림 배지 초기화 완료");
            }
        } catch (e) {
            console.log("알림 시스템 초기화 중 오류:", e.message);
        }
    }, 1000);
    
    // 월 선택 옵션 초기화
    scwin.initMonthOptions();
    
    // 캘린더 컴포넌트 로드 대기 후 초기화
    setTimeout(function() {
        console.log("캘린더 컴포넌트 확인 중...");
        
        // 캘린더 컴포넌트가 준비될 때까지 대기
        var checkCalendar = function() {
            if (shc_myschedule && typeof shc_myschedule.gotoDate === 'function') {
                console.log("캘린더 컴포넌트 준비 완료");
                scwin.initScheduleData();
            } else {
                console.log("캘린더 컴포넌트 대기 중...");
                setTimeout(checkCalendar, 200);
            }
        };
        
        checkCalendar();
    }, 300);
};

scwin.initMonthOptions = function() {
    // 2025년 8월과 9월로 고정
    var currentYear = 2025;
    
    // 월 옵션 데이터 생성 (8월과 9월만)
    var monthOptions = [
        {
            value: "202508", 
            label: "2025년 8월"
        },
        {
            value: "202509", 
            label: "2025년 9월"
        }
    ];
    
    console.log("월 선택 옵션: 2025년 8월, 9월");
    
    	dlt_monthOptions.setJSON(monthOptions);
	
	// 실제 값으로 설정 (onchange 이벤트 발생 방지)
	setTimeout(function() {
		try {
			// onchange 이벤트를 일시적으로 비활성화
			var originalOnChange = sbx_month.onchange;
			sbx_month.onchange = null;
			
			sbx_month.setValue("202508"); // 8월을 기본 선택
			console.log("초기 월 선택 완료: 202508");
			
			// onchange 이벤트 복원
			setTimeout(function() {
				sbx_month.onchange = originalOnChange;
			}, 50);
			
		} catch (e) {
			console.log("초기 월 선택 설정 오류:", e);
			// 대체 방법으로 인덱스 사용
			sbx_month.setSelectedIndex(0);
		}
	}, 100);
    
    // 전역 변수에 저장 (다른 함수에서 사용하기 위해)
    scwin.currentYearMonth = "202508";
    scwin.nextYearMonth = "202509";
};

scwin.sbx_month_onchange = function(info) {
    var selectedMonth = sbx_month.getValue();
    console.log("선택된 월:", selectedMonth);
    
    if (!selectedMonth) {
        console.log("선택된 월이 없습니다.");
        return;
    }
    
    try {
        // 8월 선택 시 현재 페이지 유지 (mobileMySchedule.xml)
        if (selectedMonth === "202508") {
            console.log("8월 선택됨 - 현재 페이지 유지 및 데이터 로드");
            scwin.loadScheduleData(selectedMonth);
            
            // 캘린더 날짜 이동
            var year = selectedMonth.substring(0, 4);
            var month = selectedMonth.substring(4, 6);
            var gotoDate = year + month + "01";
            
            console.log("캘린더 이동 준비:", gotoDate);
            
            setTimeout(function() {
                try {
                    if (shc_myschedule && shc_myschedule.gotoDate) {
                        // 다양한 날짜 형식 시도
                        var dateFormats = [
                            gotoDate,                           // 20250801
                            year + "-" + month + "-01",         // 2025-08-01
                            new Date(parseInt(year), parseInt(month) - 1, 1), // Date 객체
                            year + "/" + month + "/01"          // 2025/08/01
                        ];
                        
                        var success = false;
                        for (var i = 0; i < dateFormats.length; i++) {
                            try {
                                shc_myschedule.gotoDate(dateFormats[i]);
                                console.log("gotoDate 성공 (형식 " + i + "):", dateFormats[i]);
                                success = true;
                                break;
                            } catch (e) {
                                console.log("gotoDate 실패 (형식 " + i + "):", dateFormats[i], e.message);
                            }
                        }
                        
                        if (!success) {
                            console.log("모든 날짜 형식 시도 실패");
                        }
                    }
                    
                    if (shc_myschedule && shc_myschedule.refresh) {
                        shc_myschedule.refresh();
                    }
                } catch (e) {
                    console.error("캘린더 이동 오류:", e);
                }
            }, 100);
            
            return;
        }
        
        // 9월 선택 시 mobileHopeWorkEntryfinal.xml로 이동
        if (selectedMonth === "202509") {
            console.log("9월 선택됨 - mobileHopeWorkEntryfinal.xml로 이동 준비");
            
            // 확인 대화상자 표시
            Swal.fire({
                title: '페이지 이동',
                text: '9월 희망근무 신청 페이지로 이동합니다. 이동하시겠습니까?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#1C3D6B',
                cancelButtonColor: '#6c757d',
                confirmButtonText: '이동하기',
                cancelButtonText: '취소'
            }).then((result) => {
                if (result.isConfirmed) {
                    // mobileHopeWorkEntryfinal.xml로 이동
                    try {
                        console.log("페이지 이동 시도 중...");
                        
                        var isNavigated = false;
                        
                        // 방법 1: 웹스퀘어 표준 네비게이션 함수 사용
                        try {
                            if (typeof com !== 'undefined' && com.win && com.win.goUrl) {
                                console.log("웹스퀘어 네비게이션 함수 사용");
                                com.win.goUrl("/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml");
                                isNavigated = true;
                                console.log("웹스퀘어 네비게이션 성공");
                            }
                        } catch (e) {
                            console.log("웹스퀘어 네비게이션 실패:", e.message);
                        }
                        
                        // 방법 2: 메인 프레임으로 이동
                        if (!isNavigated) {
                            try {
                                if (parent && parent.wfr_mainContent && parent.wfr_mainContent.setSrc) {
                                    var targetUrl = "/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";
                                    console.log("메인 프레임으로 이동:", targetUrl);
                                    parent.wfr_mainContent.setSrc(targetUrl);
                                    isNavigated = true;
                                    console.log("메인 프레임 이동 성공");
                                }
                            } catch (e) {
                                console.log("메인 프레임 이동 실패:", e.message);
                            }
                        }
                        
                        // 방법 3: 부모 창의 메인 컨텐츠 영역으로 이동
                        if (!isNavigated) {
                            try {
                                if (parent && parent.document && parent.document.getElementById("mainContent")) {
                                    console.log("부모 창의 메인 컨텐츠 영역으로 이동");
                                    var mainFrame = parent.document.getElementById("mainContent");
                                    if (mainFrame && mainFrame.src) {
                                        mainFrame.src = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";
                                        isNavigated = true;
                                        console.log("부모 창 메인 컨텐츠 이동 성공");
                                    }
                                }
                            } catch (e) {
                                console.log("부모 창 메인 컨텐츠 이동 실패:", e.message);
                            }
                        }
                        
                        // 방법 4: top 윈도우로 이동
                        if (!isNavigated) {
                            try {
                                if (top && top.location) {
                                    console.log("top 윈도우로 이동");
                                    var targetUrl = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";
                                    top.location.href = targetUrl;
                                    isNavigated = true;
                                    console.log("top 윈도우 이동 성공");
                                }
                            } catch (e) {
                                console.log("top 윈도우 이동 실패:", e.message);
                            }
                        }
                        
                        // 방법 5: 현재 윈도우로 직접 이동
                        if (!isNavigated) {
                            try {
                                console.log("현재 윈도우로 직접 이동");
                                var targetUrl = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";
                                window.location.href = targetUrl;
                                isNavigated = true;
                                console.log("현재 윈도우 직접 이동 성공");
                            } catch (e) {
                                console.log("현재 윈도우 직접 이동 실패:", e.message);
                            }
                        }
                        
                        // 방법 6: replace 방식으로 이동
                        if (!isNavigated) {
                            try {
                                console.log("replace 방식으로 이동");
                                var targetUrl = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";
                                window.location.replace(targetUrl);
                                isNavigated = true;
                                console.log("replace 방식 이동 성공");
                            } catch (e) {
                                console.log("replace 방식 이동 실패:", e.message);
                            }
                        }
                        
                        console.log("페이지 이동 요청 완료, 성공 여부:", isNavigated);
                        
                    } catch (e) {
                        console.error("페이지 이동 오류:", e);
                        Swal.fire({
                            icon: 'error',
                            title: '페이지 이동 중 오류',
                            text: '페이지 이동 중 오류가 발생했습니다: ' + e.message,
                            confirmButtonText: '확인'
                        });
                    }
                } else {
                    // 사용자가 취소한 경우 다시 8월로 되돌리기
                    console.log("페이지 이동 취소됨 - 8월로 되돌림");
                    sbx_month.setSelectedIndex(0); // 8월 선택
                }
            });
            
            return;
        }
        
    } catch (e) {
        console.error("월 변경 처리 중 오류:", e);
    }
};

scwin.initScheduleData = function() {
	// 8월 데이터로 시작
	scwin.loadScheduleData("202508");
	// 초기 제목 설정
	scwin.updateCalendarTitle("202508");
};

// 캘린더 헤더 제목 업데이트
scwin.updateCalendarTitle = function(yearMonth) {
	try {
		var year = yearMonth.substring(0, 4);
		var month = yearMonth.substring(4, 6);
		var monthInt = parseInt(month);
		var title = year + "년 " + monthInt + "월";
		
		var titleElement = document.getElementById("calendar-title");
		if (titleElement) {
			titleElement.textContent = title;
			console.log("캘린더 제목 업데이트:", title);
		}
	} catch (e) {
		console.error("캘린더 제목 업데이트 오류:", e);
	}
};

scwin.loadScheduleData = function(yearMonth) {
	try {
		// 캘린더 헤더 제목 업데이트
		scwin.updateCalendarTitle(yearMonth);
		
		var scheduleData = [];
		
		// 현재 달인지 다음 달인지 확인
		var isCurrentMonth = (yearMonth === scwin.currentYearMonth);
		var year = yearMonth.substring(0, 4);
		var month = yearMonth.substring(4, 6);
        
        // 해당 월의 마지막 날 계산
        var lastDay = new Date(parseInt(year), parseInt(month), 0).getDate();
        
        // 샘플 스케줄 패턴 (E, N, O, D를 순환)
        var schedulePattern = ["E", "N", "O", "D"];
        var colorMap = {
            "E": {color: "#ffffff", backgroundColor: "#3F51B5", borderColor: "#303F9F", textColor: "#ffffff", className: "work-night"},
            "N": {color: "#ffffff", backgroundColor: "#9C27B0", borderColor: "#7B1FA2", textColor: "#ffffff", className: "work-vacation"},
            "O": {color: "#ffffff", backgroundColor: "#4CAF50", borderColor: "#388E3C", textColor: "#ffffff", className: "work-normal"},
            "D": {color: "#ffffff", backgroundColor: "#FF9800", borderColor: "#F57C00", textColor: "#ffffff", className: "work-overtime"}
        };
        
        // 해당 월의 모든 날짜에 대해 스케줄 생성
        for (var day = 1; day <= lastDay; day++) {
            var dayStr = (day < 10 ? "0" : "") + day;
            var dateStr = year + month + dayStr;
            
            // 패턴 순환 (날짜에 따라 다른 스케줄 타입)
            var scheduleType = schedulePattern[day % 4];
            var colors = colorMap[scheduleType];
            
            scheduleData.push({
                id: yearMonth + "_" + day,
                title: scheduleType,
                start: dateStr,
                end: dateStr,
                allDay: true,
                color: colors.color,
                backgroundColor: colors.backgroundColor,
                borderColor: colors.borderColor,
                textColor: colors.textColor,
                className: colors.className
            });
        }
        
        // 데이터리스트에 데이터 설정
        dlt_schedule.setJSON(scheduleData);
        console.log(year + "년 " + parseInt(month) + "월 스케줄 데이터가 로드되었습니다. (총 " + lastDay + "일)");
        
        // 데이터 변경 알림
        if (dlt_schedule.broadcast) {
            dlt_schedule.broadcast();
        }
        
        // 캘린더 새로고침
        setTimeout(function() {
            try {
                if (shc_myschedule && shc_myschedule.refresh) {
                    shc_myschedule.refresh();
                } else if (shc_myschedule && shc_myschedule.render) {
                    shc_myschedule.render();
                }
                
                // 클래스 적용
                setTimeout(function() {
                    scwin.applyEventClasses();
                }, 500);
                
            } catch (e) {
                console.error("캘린더 새로고침 오류:", e);
            }
        }, 200);
        
    } catch (e) {
        console.error("스케줄 데이터 로드 중 오류:", e);
    }
};

scwin.shc_myschedule_onclick = function (dateInfo) {
    console.log("클릭된 날짜:", dateInfo);
    
    if (dateInfo && dateInfo.start) {
        var clickedDate = dateInfo.start;
        var dateStr = "";
        
        // 날짜 형식 처리
        if (typeof clickedDate === 'string') {
            if (clickedDate.length === 8) {
                // YYYYMMDD 형식
                var year = clickedDate.substring(0, 4);
                var month = clickedDate.substring(4, 6);
                var day = clickedDate.substring(6, 8);
                dateStr = year + "-" + month + "-" + day;
            } else {
                dateStr = clickedDate;
            }
        } else if (clickedDate instanceof Date) {
            dateStr = clickedDate.toISOString().split('T')[0];
        }
        
        // 요일 계산
        var date = new Date(dateStr);
        var dayNames = ['일', '월', '화', '수', '목', '금', '토'];
        var dayOfWeek = dayNames[date.getDay()];
        
        // 선택된 날짜 정보 저장
        var formattedDate = (date.getMonth() + 1) + "월 " + date.getDate() + "일 (" + dayOfWeek + ")";
        dm_selectedDate.set("date", formattedDate);
        dm_selectedDate.set("dayOfWeek", dayOfWeek);
        
        // 해당 날짜의 근무자 데이터 로드
        scwin.loadWorkersForDate(dateStr);
        
        // 팝업 표시
        scwin.showWorkerPopup();
    }
};

scwin.loadWorkersForDate = function(dateStr) {
    // 샘플 근무자 데이터 (실제로는 서버에서 가져와야 함)
    var workersData = [
        {name: "김지연", isLeader: "Y", isAbsent: "N"},
        {name: "박지연", isLeader: "N", isAbsent: "N"},
        {name: "이서연", isLeader: "N", isAbsent: "N"},
        {name: "김민지", isLeader: "N", isAbsent: "N"},
        {name: "오원석", isLeader: "N", isAbsent: "Y"}
    ];
    
    dlt_workers.setJSON(workersData);
    console.log("근무자 데이터 로드됨:", workersData.length + "명");
};

scwin.showWorkerPopup = function() {
    // 팝업 오버레이와 팝업 표시
    document.getElementById("popup-overlay").classList.remove("hidden");
    document.getElementById("worker-popup").classList.remove("hidden");
    
    // 선택된 날짜 표시
    var selectedDate = dm_selectedDate.get("date");
    document.getElementById("popup-date").textContent = selectedDate;
    
    // 근무자 목록 생성
    var workerListHtml = "";
    var workerCount = dlt_workers.getTotalRow();
    
    for (var i = 0; i < workerCount; i++) {
        var worker = dlt_workers.getRowJSON(i);
        var leaderIcon = worker.isLeader === "Y" ? '<img src="/InsWebApp/images/crown.png" class="leader-crown-img" alt="리더" style="width: 20px; height: 20px; margin-left: 8px; vertical-align: middle; border: none; box-shadow: none;">' : '';
        var absentMark = worker.isAbsent === "Y" ? '<img src="/InsWebApp/images/new.png" class="absent-mark-img" alt="신입" style="width: 20px; height: 20px; margin-left: 4px; vertical-align: middle; border: none; box-shadow: none;">' : '';
        
        workerListHtml += '<div class="worker-item">' +
                         '<span class="worker-name">' + worker.name + '</span>' +
                         leaderIcon +
                         absentMark +
                         '</div>';
    }
    
    document.getElementById("worker-list").innerHTML = workerListHtml;
};

scwin.hideWorkerPopup = function() {
    // 팝업 숨기기
    document.getElementById("popup-overlay").classList.add("hidden");
    document.getElementById("worker-popup").classList.add("hidden");
};

scwin.btn_confirm_onclick = function() {
    // 팝업만 닫고 myschedule.xml 페이지에 그대로 머물기
    scwin.hideWorkerPopup();
};

// 이벤트 클래스 강제 적용 함수
scwin.applyEventClasses = function() {
    try {
        console.log("이벤트 클래스 적용 시작");
        
        // 모든 fc-event 요소 찾기
        var events = document.querySelectorAll('.fc-event');
        console.log("찾은 이벤트 수:", events.length);
        
        events.forEach(function(event, index) {
            var title = event.querySelector('.fc-title');
            if (title) {
                var workType = title.textContent.trim();
                console.log("이벤트 " + index + " 근무타입:", workType);
                
                // 기존 work- 클래스 제거
                event.classList.remove('work-normal', 'work-overtime', 'work-night', 'work-vacation');
                
                // 근무 타입에 따라 클래스 추가
                switch(workType) {
                    case 'O':
                        event.classList.add('work-normal');
                        console.log("work-normal 클래스 추가");
                        break;
                    case 'D':
                        event.classList.add('work-overtime');
                        console.log("work-overtime 클래스 추가");
                        break;
                    case 'E':
                        event.classList.add('work-night');
                        console.log("work-night 클래스 추가");
                        break;
                    case 'N':
                        event.classList.add('work-vacation');
                        console.log("work-vacation 클래스 추가");
                        break;
                }
                
                console.log("최종 클래스:", event.className);
            }
        });
    } catch (e) {
        console.error("클래스 적용 중 오류:", e);
    }
};

// ========== 알림 시스템 설정 상수 ==========
scwin.CONFIG = {
    MODAL: {
        ID: "custom_notification_modal",
        MAX_WIDTH: "700px",
        MAX_HEIGHT: "80%",
        Z_INDEX: 10000
    },
    STYLES: {
        COLORS: {
            INFO: "#E3F2FD",
            WORK: "#E8F5E8", 
            WARNING: "#FFF3E0",
            DEFAULT: "#F5F5F5",
            BORDER: "#2196F3",
            READ_BG: "#FFFFFF",
            UNREAD_BG: "#F0F8FF",
            READ_TEXT: "#666666",
            UNREAD_TEXT: "#333333",
            READ_BORDER: "#E0E0E0",
            UNREAD_BORDER: "#2196F3"
        },
        GRADIENT: "linear-gradient(135deg, #2196F3, #1976D2)"
    },
    ICONS: {
        INFO: "[정보]",
        WORK: "[업무]", 
        WARNING: "[경고]",
        DEFAULT: "[알림]",
        UNREAD: "",
        BELL: "",
        CALENDAR: "",
        EMPTY: "",
        SUMMARY: "",
        TIP: ""
    },
    TIMINGS: {
        MARK_READ_DELAY: 3000,
        REFRESH_DELAY: 100,
        BADGE_UPDATE_DELAY: 500
    }
};

// ========== 알림 데이터 (내 스케줄 관련) ==========
scwin.notifications = [
    {
        id: "noti_1",
        title: "스케줄 조회 안내", 
        message: "스케줄의 변경 사항이 있습니다.",
        type: "info",
        createDate: "2025-01-15 09:00:00",
        isRead: false
    },
    {
        id: "noti_2",
        title: "스케줄 조회 안내",
        message: "스케줄이 결정되었습니다. 2025년 8월 스케줄을 조회할 수 있습니다.", 
        type: "info",
        createDate: "2025-01-15 10:30:00",
        isRead: false
    },
    {
        id: "noti_3", 
        title: "근무자 정보 안내",
        message: "날짜를 클릭하면 해당 날짜의 근무자 명단과 차지 간호사, 신입 정보를 확인할 수 있습니다.",
        type: "info",
        createDate: "2025-01-15 11:45:00", 
        isRead: true
    },
    {
        id: "noti_4",
        title: "스케줄 타입 안내",
        message: "스케줄 타입: E(Evening), N(Night), O(Off), D(Day) - 각각 다른 색상으로 표시됩니다.",
        type: "work", 
        createDate: "2025-01-15 14:20:00",
        isRead: true
    },
    {
        id: "noti_5",
        title: "스케줄 조회 안내",
        message: "스케줄이 결정되었습니다. 2025년 8월 스케줄을 조회할 수 있습니다.",
        type: "info",
        createDate: "2025-01-15 15:10:00",
        isRead: true
    },
    {
        id: "noti_6",
        title: "월별 전환 기능", 
        message: "상단의 월 선택 드롭다운을 통해 8월과 9월 스케줄을 자유롭게 전환할 수 있습니다.",
        type: "info",
        createDate: "2025-01-15 16:30:00",
        isRead: true
    }
];

// ========== 알림 유틸리티 함수 ==========
// 알림 타입에 따른 아이콘과 색상 가져오기
scwin.getNotificationStyle = function(type) {
    switch(type) {
        case "info":
            return {
                icon: scwin.CONFIG.ICONS.INFO,
                bgColor: scwin.CONFIG.STYLES.COLORS.INFO
            };
        case "work":
            return {
                icon: scwin.CONFIG.ICONS.WORK,
                bgColor: scwin.CONFIG.STYLES.COLORS.WORK
            };
        case "warning":
            return {
                icon: scwin.CONFIG.ICONS.WARNING,
                bgColor: scwin.CONFIG.STYLES.COLORS.WARNING
            };
        default:
            return {
                icon: scwin.CONFIG.ICONS.DEFAULT,
                bgColor: scwin.CONFIG.STYLES.COLORS.DEFAULT
            };
    }
};

// 미읽은 알림 개수 계산
scwin.getUnreadCount = function() {
    var count = 0;
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (!scwin.notifications[i].isRead) {
            count++;
        }
    }
    return count;
};

// 알림 HTML 생성 (모달용)
scwin.generateNotificationHTML = function() {
    var notificationHtml = "";
    
    if (scwin.notifications.length === 0) {
        return "<div style='text-align: center; color: #999; font-size: 16px; padding: 40px;'>" + 
               scwin.CONFIG.ICONS.EMPTY + " 알림이 없습니다.</div>";
    }
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        var notification = scwin.notifications[i];
        var style = scwin.getNotificationStyle(notification.type);
        var readStatus = notification.isRead ? "" : " " + scwin.CONFIG.ICONS.UNREAD + " (미읽음)";
        
        // 읽음/미읽음에 따른 스타일 설정
        var bgColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_BG : scwin.CONFIG.STYLES.COLORS.UNREAD_BG;
        var textColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_TEXT : scwin.CONFIG.STYLES.COLORS.UNREAD_TEXT;
        var borderColor = notification.isRead ? scwin.CONFIG.STYLES.COLORS.READ_BORDER : scwin.CONFIG.STYLES.COLORS.UNREAD_BORDER;
        var fontWeight = notification.isRead ? "normal" : "bold";
        var boxShadow = notification.isRead ? "0 1px 3px rgba(0,0,0,0.1)" : "0 2px 8px rgba(33,150,243,0.2)";
        
        notificationHtml += 
            "<div onclick='scwin.markNotificationAsRead(\"" + notification.id + "\")' style='margin-bottom: 15px; padding: 15px; background-color: " + bgColor + "; border-radius: 8px; border-left: 5px solid " + borderColor + "; box-shadow: " + boxShadow + "; transition: all 0.3s ease; cursor: " + (notification.isRead ? "default" : "pointer") + ";'>" +
            "<div style='font-size: 16px; font-weight: " + fontWeight + "; color: " + textColor + "; margin-bottom: 8px;'>" +
            style.icon + " " + notification.title + readStatus + "</div>" +
            "<div style='font-size: 14px; color: " + (notification.isRead ? "#777" : "#555") + "; margin-bottom: 8px; line-height: 1.4;'>" + notification.message + "</div>" +
            "<div style='font-size: 12px; color: " + (notification.isRead ? "#999" : "#888") + "; text-align: right;'>" + scwin.CONFIG.ICONS.CALENDAR + " " + notification.createDate + "</div>" +
            "</div>";
    }
    
    return notificationHtml;
};

// 알림 메시지 생성 (Alert용)
scwin.generateAlertMessage = function() {
    var unreadCount = scwin.getUnreadCount();
    var message = scwin.CONFIG.ICONS.BELL + " [내 스케줄 알림 센터] " + scwin.CONFIG.ICONS.BELL + "\n\n";
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        var notification = scwin.notifications[i];
        var style = scwin.getNotificationStyle(notification.type);
        var statusText = notification.isRead ? "[읽음]" : "[미읽음]";
        
        message += "━━━━━━━━━━━━━━━━━━━━━━━\n";
        message += (i + 1) + ". " + style.icon + " " + notification.title + " " + statusText + "\n";
        message += "내용: " + notification.message + "\n";
        message += "시간: " + notification.createDate + "\n\n";
    }
    
    message += "━━━━━━━━━━━━━━━━━━━━━━━\n";
    message += scwin.CONFIG.ICONS.SUMMARY + " 요약: 총 " + scwin.notifications.length + "개 알림 (미읽음 " + unreadCount + "개)\n\n";
    message += scwin.CONFIG.ICONS.TIP + " 이 창을 닫으면 모든 알림이 읽음 처리됩니다.";
    
    return message;
};

// 모달 이벤트 리스너 등록
scwin.attachModalEventListeners = function() {
    var modal = document.getElementById(scwin.CONFIG.MODAL.ID);
    if (!modal) return;
    
    // 모달 외부 클릭 시 닫기
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            scwin.closeCustomModal();
        }
    });
    
    // ESC 키로 닫기 (한 번만 등록)
    if (!scwin._escListenerAttached) {
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && document.getElementById(scwin.CONFIG.MODAL.ID)) {
                scwin.closeCustomModal();
            }
        });
        scwin._escListenerAttached = true;
    }
};

// ========== 알림 모달 관리 함수 ==========
// 알림 모달 표시
scwin.showNotificationModal = function() {
    console.log("=== 내 스케줄 알림 모달 표시 시도 ===");
    
    try {
        // 먼저 알림 데이터 확인
        console.log("현재 알림 개수:", scwin.notifications.length);
        
        // DOM 기반 커스텀 모달로 직접 표시
        scwin.showCustomModal();
        
    } catch (e) {
        console.log("모달 표시 중 오류 발생:", e.message);
        console.log("alert로 대체 표시");
        scwin.showAlertNotification();
    }
};

// 커스텀 DOM 모달로 표시
scwin.showCustomModal = function() {
    console.log("=== 내 스케줄 커스텀 모달 생성 시작 ===");
    
    try {
        // 기존 모달이 있으면 제거
        var existingModal = document.getElementById(scwin.CONFIG.MODAL.ID);
        if (existingModal) {
            existingModal.remove();
        }
        
        var unreadCount = scwin.getUnreadCount();
        var notificationHtml = scwin.generateNotificationHTML();
        
        console.log("알림 HTML 생성 완료, 총 " + scwin.notifications.length + "개");
        
        // 모달 HTML 생성
        var modalHtml = 
            "<div id='" + scwin.CONFIG.MODAL.ID + "' style='position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: " + scwin.CONFIG.MODAL.Z_INDEX + "; display: flex; justify-content: center; align-items: center;'>" +
            "<div style='background: white; border-radius: 12px; width: 90%; max-width: " + scwin.CONFIG.MODAL.MAX_WIDTH + "; max-height: " + scwin.CONFIG.MODAL.MAX_HEIGHT + "; box-shadow: 0 10px 30px rgba(0,0,0,0.3); overflow: hidden;'>" +
            
            // 헤더
            "<div style='background: #1C3D6B; color: white; padding: 20px; text-align: center;'>" +
            "<h2 style='margin: 0; font-size: 20px; font-weight: bold;'>" + scwin.CONFIG.ICONS.BELL + " 내 스케줄 알림 센터</h2>" +
            "<p style='margin: 5px 0 0 0; font-size: 14px; opacity: 0.9;'>총 " + scwin.notifications.length + "개 알림" + (unreadCount > 0 ? " (" + scwin.CONFIG.ICONS.UNREAD + "미읽음 " + unreadCount + "개)" : "") + "</p>" +
            "</div>" +
            
            // 내용
            "<div style='padding: 20px; max-height: 400px; overflow-y: auto;'>" +
            notificationHtml +
            "</div>" +
            

            
            "</div>" +
            "</div>";
        
        // DOM에 추가
        document.body.insertAdjacentHTML('beforeend', modalHtml);
        
        console.log("내 스케줄 커스텀 모달 생성 완료");
        
        // 이벤트 리스너 등록
        scwin.attachModalEventListeners();
        
        // 자동 읽음 처리 (시간을 늘려서 사용자가 개별 클릭할 시간 확보)
        setTimeout(function() {
            scwin.markAllAsRead();
        }, 10000); // 10초로 변경
        
        console.log("=== 내 스케줄 커스텀 모달 표시 완료 ===");
        
    } catch (e) {
        console.log("커스텀 모달 생성 중 오류:", e.message);
        scwin.showAlertNotification();
    }
};

// Alert로 알림 표시 (대체 방법)
scwin.showAlertNotification = function() {
    console.log("=== Alert로 내 스케줄 알림 표시 시작 ===");
    
    try {
        var message = scwin.generateAlertMessage();
        var unreadCount = scwin.getUnreadCount();
        
        console.log("Alert 창 표시, 미읽음 " + unreadCount + "개");
        Swal.fire({
            icon: 'info',
            title: '알림',
            text: message,
            confirmButtonText: '확인'
        });
        
        // 1초 후 모든 알림을 읽음 처리
        setTimeout(function() {
            scwin.markAllAsRead();
        }, 1000);
        
        console.log("=== Alert 내 스케줄 알림 표시 완료 ===");
        
    } catch (e) {
        console.log("Alert 표시 중 오류:", e.message);
        // 최후의 수단
        Swal.fire({
            icon: 'error',
            title: '알림 표시 중 오류',
            text: '알림 표시 중 오류가 발생했습니다.\n현재 ' + scwin.notifications.length + '개의 알림이 있습니다.\n개발자 도구 콘솔을 확인해주세요.',
            confirmButtonText: '확인'
        });
    }
};

// ========== 알림 관리 함수 ==========
// 모든 알림을 읽음 처리
scwin.markAllAsRead = function() {
    var hasChanges = false;
    
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (!scwin.notifications[i].isRead) {
            scwin.notifications[i].isRead = true;
            hasChanges = true;
        }
    }
    
    if (hasChanges) {
        scwin.updateNotificationBadge();
        console.log("모든 내 스케줄 알림을 읽음 처리 완료");
    }
};

// 개별 알림 읽음 처리
scwin.markNotificationAsRead = function(notificationId) {
    for (var i = 0; i < scwin.notifications.length; i++) {
        if (scwin.notifications[i].id === notificationId && !scwin.notifications[i].isRead) {
            scwin.notifications[i].isRead = true;
            scwin.updateNotificationBadge();
            console.log("알림 읽음 처리:", notificationId);
            
            // 모달 새로고침하여 색상 변경
            scwin.refreshModal();
            return true;
        }
    }
    return false;
};

// 알림 배지 업데이트 (성능 최적화)
scwin.updateNotificationBadge = function() {
    try {
        var unreadCount = scwin.getUnreadCount();
        
        // 버튼 찾기 (캐싱)
        if (!scwin._btnAlarmCache) {
            scwin._btnAlarmCache = $w.getComponentById("btn_alarm") || document.getElementById("btn_alarm");
        }
        
        var btnAlarm = scwin._btnAlarmCache;
        if (!btnAlarm) {
            console.log("내 스케줄 알림 버튼을 찾을 수 없습니다");
            return;
        }
        
        // 현재 상태와 비교하여 필요한 경우만 업데이트
        var shouldShowBadge = unreadCount > 0;
        var currentlyShowingBadge = btnAlarm._badgeActive || false;
        
        if (shouldShowBadge !== currentlyShowingBadge) {
            if (shouldShowBadge) {
                // 미읽은 알림이 있으면 빨간 테두리
                var badgeStyle = "border: 3px solid #FF0000; border-radius: 50%; box-shadow: 0 0 10px #FF0000;";
                if (btnAlarm.setStyle) {
                    btnAlarm.setStyle(badgeStyle);
                } else {
                    btnAlarm.style.border = "3px solid #FF0000";
                    btnAlarm.style.borderRadius = "50%";
                    btnAlarm.style.boxShadow = "0 0 10px #FF0000";
                }
                btnAlarm._badgeActive = true;
                console.log("내 스케줄 알림 배지 활성화 (" + unreadCount + "개 미읽음)");
            } else {
                // 미읽은 알림이 없으면 원래 상태
                if (btnAlarm.setStyle) {
                    btnAlarm.setStyle("border: none; box-shadow: none;");
                } else {
                    btnAlarm.style.border = "none";
                    btnAlarm.style.boxShadow = "none";
                }
                btnAlarm._badgeActive = false;
                console.log("내 스케줄 알림 배지 비활성화");
            }
        }
        
    } catch (e) {
        console.log("배지 업데이트 중 오류:", e.message);
    }
};

// 테스트 알림 추가 (내 스케줄 관련)
scwin.addTestNotification = function() {
    var testMessages = [
        {
            title: "스케줄 업데이트",
            message: "8월 " + (Math.floor(Math.random() * 28) + 1) + "일 스케줄이 업데이트되었습니다.",
            type: "work"
        },
        {
            title: "근무자 변경",
            message: "금일 근무자 명단이 변경되었습니다. 확인해 주세요.",
            type: "info"
        },
        {
            title: "팀장 지정",
            message: "새로운 팀장이 지정되었습니다.",
            type: "warning"
        },
        {
            title: "월별 스케줄 마감",
            message: "8월 스케줄 확정이 완료되었습니다.",
            type: "info"
        },
        {
            title: "근무 패턴 변경",
            message: "다음 주부터 근무 패턴이 변경됩니다.",
            type: "work"
        }
    ];
    
    var randomIndex = Math.floor(Math.random() * testMessages.length);
    var testMessage = testMessages[randomIndex];
    
    // 새 알림 추가
    var newNotification = {
        id: "test_" + new Date().getTime(),
        title: testMessage.title,
        message: testMessage.message,
        type: testMessage.type,
        createDate: new Date().toLocaleString(),
        isRead: false
    };
    
    scwin.notifications.unshift(newNotification); // 맨 앞에 추가
    
    console.log("내 스케줄 테스트 알림 추가:", testMessage.title);
    
    // 배지 업데이트
    scwin.updateNotificationBadge();
    
    // 모달 새로고침 (성능 최적화)
    scwin.refreshModal();
};

// 모달 새로고침 (성능 최적화)
scwin.refreshModal = function() {
    var existingModal = document.getElementById(scwin.CONFIG.MODAL.ID);
    if (existingModal) {
        scwin.closeCustomModal();
        setTimeout(function() {
            scwin.showNotificationModal();
        }, scwin.CONFIG.TIMINGS.REFRESH_DELAY);
    }
};

// 커스텀 모달 닫기 (개선된 버전)
scwin.closeCustomModal = function() {
    console.log("내 스케줄 커스텀 모달 닫기");
    try {
        var modal = document.getElementById(scwin.CONFIG.MODAL.ID);
        if (modal) {
            modal.remove();
            console.log("내 스케줄 커스텀 모달 제거 완료");
        }
    } catch (e) {
        console.log("모달 닫기 중 오류:", e.message);
    }
};

// 알림 모달 닫기 (호환성)
scwin.closeNotificationModal = function() {
    scwin.closeCustomModal();
};

scwin.btn_booking_onclick = function (e) {
    location.href = "/InsWebApp/websquare/websquare.html?w2xPath=/InsWebApp/ui/mobile/mobileHopeWorkEntryfinal.xml";;
};

// ========== 메인 이벤트 핸들러 ==========
// 알림 버튼 클릭 (단일 이벤트 핸들러)
scwin.btn_alarm_onclick = function(e) {
    console.log("=== 내 스케줄 알림 버튼 클릭됨 ===");
    
    try {
        console.log("현재 내 스케줄 알림 개수:", scwin.notifications.length);
        scwin.showNotificationModal();
    } catch (error) {
        console.log("버튼 클릭 처리 중 오류:", error.message);
        scwin.showAlertNotification();
    }
};
]]></script>
	</head>
	<body ev:onpageload="scwin.onpageload">
		<xf:group class="sub_contents" id="" meta_snippetCategory="00_화면시작" meta_snippetKeyComponent="true" meta_snippetName="0_01 페이지시작"
			style="">
			<!-- 월 선택 드롭다운 -->
			<xf:group class="pgtbox" id="" meta_snippetCategory="02_타이틀" meta_snippetKeyComponent="true" meta_snippetName="2_01 페이지타이틀"
				style="">
				<xf:group class="breadcrumb" id="" style=""></xf:group>
				<xf:image src="/InsWebApp/images/jong.png" style="width: 30px;height: 30px;cursor: pointer;" id="btn_alarm"
					ev:onclick="scwin.btn_alarm_onclick"></xf:image>
			</xf:group>
			<xf:group class="schbox" id="" style="margin-bottom: 10px;">
    			<w2:textbox class="schbox_tit" id="" label="월 선택:" style="display: inline-block; margin-right: 10px;"></w2:textbox>
    			                <xf:select1 appearance="minimal" class="" id="sbx_month" style="width: 150px;" ref="" chooseOptionLabel="2025년 8월"
                	ev:onchange="scwin.sbx_month_onchange" submitValue="true" allOption="" chooseOption="false">
    				<xf:itemset nodeset="data:dlt_monthOptions">
    					<xf:label ref="label"></xf:label>
    					<xf:value ref="value"></xf:value>
    				</xf:itemset>
    				<xf:choices>
    					<xf:itemset nodeset="data:dlt_monthOptions">
    						<xf:label ref="label"></xf:label>
    						<xf:value ref="value"></xf:value>
    					</xf:itemset>
    				</xf:choices>
    			</xf:select1>
    		</xf:group>

		<!-- 커스텀 캘린더 헤더 (제목 + 버튼) -->
		<div id="calendar-header" style="background: #f8f9fa;border: 1px solid #dee2e6;padding: 10px 15px; 			display: flex; 			justify-content: space-between; 			align-items: center;font-weight: bold;font-size: 16px;color: #495057;width: 100%;box-sizing: border-box;">
			<span id="calendar-title">2025년 8월</span>
			<xf:trigger class="btn_cm" ev:onclick="scwin.btn_booking_onclick" id="btn_trigger4"
				style="background-color:#1C3D6B;color:#FFFFFF;padding:0 12px;border-radius:5px;font-size:15px;text-align:center;font-weight: bold;" type="button">
				<xf:label><![CDATA[듀티신청]]></xf:label>
			</xf:trigger>
		</div>

		<w2:scheduleCalendar id="shc_myschedule" style="height:900px;" dataList="data:dlt_schedule"
			defaultDate="20250801" editable="false" endColumn="end" allDayColumn="allDay" eventLimit="true" headerLeftBtn="false"
			headerRightBtn="false" headerTitle="false" idColumn="id" ioFormat="yyyyMMdd" lang="ko" locale="ko" selectable="true" startColumn="start"
			titleColumn="title" colorColumn="color" backgroundColorColumn="backgroundColor" borderColorColumn="borderColor"
			textColorColumn="textColor" classNameColumn="className" tooltipDisplay="false" version="3.6" ev:onclick="scwin.shc_myschedule_onclick"
			noUsePrompt="true">
		</w2:scheduleCalendar>

			<!-- 근무자 팝업 오버레이 -->
			<div id="popup-overlay" class="popup-overlay hidden" onclick="scwin.hideWorkerPopup()"></div>

			<!-- 근무자 팝업 -->
			<div id="worker-popup" class="worker-popup hidden">
				<div class="popup-header">
					<h3 id="popup-date" class="popup-date">8월 21일 (토)</h3>
				</div>
				<div class="popup-content">
					<div id="worker-list">
						<!-- 근무자 목록이 동적으로 생성됩니다 -->
					</div>
				</div>
				<div class="popup-footer">
					<xf:trigger class="confirm-btn" id="btn_confirm"
						style="background: #1e3a8a; color: white; border: none; padding: 8px 24px; border-radius: 4px; font-size: 14px; cursor: pointer; min-width: 60px;"
						ev:onclick="scwin.btn_confirm_onclick">
						<xf:label>확인</xf:label>
					</xf:trigger>
				</div>
			</div>
		</xf:group>
	</body>
</html>
