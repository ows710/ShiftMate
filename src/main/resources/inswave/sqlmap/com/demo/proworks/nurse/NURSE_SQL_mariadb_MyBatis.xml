<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	@subject : 간호사정보 관련 처리를 하는 SQL Mapper
	@description : 간호사정보 관련 처리를 하는 SQL Mapper
	@author : 개발팀
	@since : 2025/07/10
	@modification
	===========================================================
	DATE AUTHOR NOTE
	===========================================================
	2025/07/10 개발팀 최초 생성
-->
<mapper namespace="com.demo.proworks.nurse">

	<insert id="insertNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo">
		<!-- 간호사 정보를 등록 처리한다. -->
		INSERT INTO nurse /* QueryID : com.demo.proworks.nurse.insertNurse */
		(
		nurseId
		<if test="nurseName != null">, nurseName </if>
		<if test="position != null">, position </if>
		<if test="specialNote != null">, specialNote </if>
		<if test="createdAt != null">, createdAt </if>
		<if test="updatedAt != null">, updatedAt </if>
		<if test="hireDate != null">, hireDate </if>
		<if test="career != null">, career </if>
		)
		VALUES
		(
		(SELECT IFNULL(MAX(nurseId), 0) + 1 FROM nurse AS temp)
		<if test="nurseName != null">, #{nurseName} </if>
		<if test="position != null">, #{position} </if>
		<if test="specialNote != null">, #{specialNote} </if>
		<if test="createdAt != null">, STR_TO_DATE(#{createdAt}, '%Y-%m-%d %H:%i:%s') </if>
		<if test="updatedAt != null">, STR_TO_DATE(#{updatedAt}, '%Y-%m-%d %H:%i:%s') </if>
		<if test="hireDate != null">, STR_TO_DATE(#{hireDate}, '%Y-%m-%d %H:%i:%s') </if>
		<if test="career != null">, #{career} </if>
		)
	</insert>

	<update id="updateNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo">
		<!-- 간호사 정보를 갱신 처리한다. -->
		UPDATE nurse /* QueryID : com.demo.proworks.nurse.updateNurse */
		<trim prefix="SET" prefixOverrides=",">
			<if test="nurseName != null">, nurseName = #{nurseName} </if>
			<if test="position != null">, position = #{position} </if>
			<if test="specialNote != null">, specialNote = #{specialNote} </if>
			<if test="updatedAt != null">, updatedAt = STR_TO_DATE(#{updatedAt}, '%Y-%m-%d') </if>
			<if test="hireDate != null">, hireDate = STR_TO_DATE(#{hireDate}, '%Y-%m-%d') </if>
			<if test="wardId != null">, wardId = #{wardId} </if>
			<if test="career != null">, career = #{career} </if>
		</trim>
		WHERE nurseId = #{nurseId}
	</update>

	<delete id="deleteNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo">
		<!-- 간호사 정보를 삭제 처리한다. -->
		<![CDATA[
        DELETE FROM nurse   /* QueryID : com.demo.proworks.nurse.deleteNurse */  
        WHERE   nurseId = #{nurseId}    
		]]>
	</delete>

	<select id="selectNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo" resultType="com.demo.proworks.nurse.vo.NurseVo">
		<!-- 간호사 정보를 상세 조회한다. -->
		<![CDATA[
        SELECT   /* QueryID : com.demo.proworks.nurse.selectNurse */  
              nurseId,
              nurseName, 
              position, 
              specialNote,
              DATE_FORMAT(createdAt, '%Y-%m-%d') AS createdAt,
              DATE_FORMAT(updatedAt, '%Y-%m-%d') AS updatedAt,
              DATE_FORMAT(hireDate, '%Y-%m-%d') AS hireDate,
              wardId, 
              career,
              (SELECT wardName FROM ward WHERE wardId = n.wardId) AS wardName
        FROM nurse n
        WHERE nurseId = #{nurseId}  
		]]>
	</select>

	<select id="selectListNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo" resultType="com.demo.proworks.nurse.vo.NurseVo">
		<!-- 간호사 정보 목록을 조회한다. -->
		SELECT /* QueryID : com.demo.proworks.nurse.selectListNurse */
		A.nurseId,
		A.nurseName,
		A.position,
		A.specialNote,
		DATE_FORMAT(A.createdAt,
		'%Y-%m-%d') AS createdAt,
		DATE_FORMAT(A.updatedAt, '%Y-%m-%d') AS updatedAt,
		DATE_FORMAT(A.hireDate, '%Y-%m-%d') AS hireDate,
		A.wardId,
		A.career,
		A.wardName
		FROM (
		SELECT S.*,
		CEIL((@ROWNUM:=@ROWNUM+1) / #{pageSize}) AS PAGE
		FROM (
		SELECT
		n.*,
		(SELECT wardName FROM ward WHERE
		wardId = n.wardId) AS wardName
		FROM nurse n
		WHERE 1=1
		<if test="!( scNurseId == null  or scNurseId == ''  )">
			AND n.nurseId = #{scNurseId}
		</if>
		<if test="!( scNurseName == null  or scNurseName == '' )">
			AND n.nurseName LIKE CONCAT('%',#{scNurseName},'%')
		</if>
		<if test="!( scPosition == null  or scPosition == '' )">
			AND n.position LIKE CONCAT('%',#{scPosition},'%')
		</if>
		<if test="!( scWardId == null  or scWardId == ''  )">
			AND n.wardId = #{scWardId}
		</if>
		ORDER BY n.nurseId ASC
		) S, (SELECT @ROWNUM := 0) TMP
		) A
		WHERE A.PAGE = #{pageIndex}
	</select>

	<select id="selectListCountNurse" parameterType="com.demo.proworks.nurse.vo.NurseVo" resultType="long">
		<!-- 간호사 정보 목록 건수를 조회한다. -->
		SELECT /* QueryID : com.demo.proworks.nurse.selectListCountNurse */
		COUNT(*) totcnt
		FROM nurse n
		WHERE 1=1
		<if test="!( scNurseId == null  or scNurseId == ''  )">
			AND n.nurseId = #{scNurseId}
		</if>
		<if test="!( scNurseName == null  or scNurseName == '' )">
			AND n.nurseName LIKE CONCAT('%',#{scNurseName},'%')
		</if>
		<if test="!( scPosition == null  or scPosition == '' )">
			AND n.position LIKE CONCAT('%',#{scPosition},'%')
		</if>
		<if test="!( scWardId == null  or scWardId == ''  )">
			AND n.wardId = #{scWardId}
		</if>
	</select>

	<select id="selectListWard" parameterType="java.util.HashMap" resultType="com.demo.proworks.nurse.vo.WardVo">
		<!-- 병동 정보 목록을 조회한다. -->
		SELECT /* QueryID : com.demo.proworks.nurse.selectListWard */
		wardId, wardName
		FROM ward
		ORDER BY wardName ASC
	</select>

	<select id="selectMaxNurseId" resultType="int">
		SELECT IFNULL(MAX(nurseId), 0) FROM nurse
	</select>

</mapper> 